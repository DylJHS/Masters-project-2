select(-c("first_hsat","last_hsat")) %>%
ungroup()
for (i in 2:nrow(cgbh_subset)) {
cgbh_subset$combined_group[i] <- ifelse(
cgbh_subset$combined[i - 1],
cgbh_subset$combined_group[i - 1],
cgbh_subset$combined_group[i - 1] + 1
)
}
# Ensuring that the resulting combined regions start and end with HSat regions
adj_cgbh <- cgbh_subset %>%
group_by(seqnames, combined_group) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
summarise(start_bp = dplyr::first(start),
end_bp = last(end),
width_Mb = round(sum(width)/(1E6),4),
name = paste(name, collapse = ", ")) %>%
select(-c("combined_group"))
final_cgbh <- adj_cgbh %>%
group_by(seqnames) %>%
filter((width_Mb == max(width_Mb)) | (width_Mb >= 1)) %>%
mutate(
peri_id = case_when(
n() > 1 ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))), "_", row_number()),
TRUE ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))))),
seqnames = substring(as.character(seqnames), 4, nchar(as.character(seqnames)))
) %>%
rename(seqnames = "chromosome") %>%
select(peri_id,chromosome, everything())
print(final_cgbh)
write.csv(final_cgbh,"/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/Other/alpha_incl_all_pericentro_meta.csv", row.names = FALSE)
# from the T2T data select the ranges for the annotations of satellites that correspond to pericentromeric sats
cgbh_segs <- all_segs %>%
filter(!(grepl("^hor.*L\\)$", name)) &
!(grepl("rDNA", name))) %>%
select(c("seqnames","start", "end", "width", "name")) %>%
arrange(seqnames, start)
# Combine the adjacent ranges
comb_cgbh <- cgbh_segs %>%
group_by(seqnames) %>%
arrange(start) %>%
mutate(end_next = lead(start),
combined = ifelse(end == end_next & !is.na(end_next), TRUE, FALSE),
combined_group = 0) %>%
select(-"end_next") %>%
arrange(seqnames, start )
cgbh_subset <- comb_cgbh %>%
group_by(seqnames) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
ungroup()
for (i in 2:nrow(cgbh_subset)) {
cgbh_subset$combined_group[i] <- ifelse(
cgbh_subset$combined[i - 1],
cgbh_subset$combined_group[i - 1],
cgbh_subset$combined_group[i - 1] + 1
)
}
# Ensuring that the resulting combined regions start and end with HSat regions
adj_cgbh <- cgbh_subset %>%
group_by(seqnames, combined_group) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
summarise(start_bp = dplyr::first(start),
end_bp = last(end),
width_Mb = round(sum(width)/(1E6),4),
name = paste(name, collapse = ", ")) %>%
select(-c("combined_group"))
final_cgbh <- adj_cgbh %>%
group_by(seqnames) %>%
# filter((width_Mb == max(width_Mb)) | (width_Mb >= 1)) %>%
mutate(
peri_id = case_when(
n() > 1 ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))), "_", row_number()),
TRUE ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))))),
seqnames = substring(as.character(seqnames), 4, nchar(as.character(seqnames)))
) %>%
rename(seqnames = "chromosome") %>%
select(peri_id,chromosome, everything())
print(final_cgbh)
write.csv(final_cgbh,"/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/Other/alpha_incl_all_pericentro_meta.csv", row.names = FALSE)
# from the T2T data select the ranges for the annotations of satellites that correspond to pericentromeric sats
cgbh_segs <- all_segs %>%
filter(!(grepl("^hor.*L\\)$", name)) &
!(grepl("rDNA", name))) %>%
select(c("seqnames","start", "end", "width", "name")) %>%
arrange(seqnames, start)
# Combine the adjacent ranges
comb_cgbh <- cgbh_segs %>%
group_by(seqnames) %>%
arrange(start) %>%
mutate(end_next = lead(start),
combined = ifelse(end == end_next & !is.na(end_next), TRUE, FALSE),
combined_group = 0) %>%
select(-"end_next") %>%
arrange(seqnames, start )
cgbh_subset <- comb_cgbh %>%
group_by(seqnames) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
ungroup()
for (i in 2:nrow(cgbh_subset)) {
cgbh_subset$combined_group[i] <- ifelse(
cgbh_subset$combined[i - 1],
cgbh_subset$combined_group[i - 1],
cgbh_subset$combined_group[i - 1] + 1
)
}
# Ensuring that the resulting combined regions start and end with HSat regions
adj_cgbh <- cgbh_subset %>%
group_by(seqnames, combined_group) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
summarise(start_bp = dplyr::first(start),
end_bp = last(end),
width_Mb = round(sum(width)/(1E6),4),
name = paste(name, collapse = ", ")) %>%
select(-c("combined_group"))
final_cgbh <- adj_cgbh %>%
group_by(seqnames) %>%
filter((width_Mb == max(width_Mb)) | (width_Mb >= 1)) %>%
mutate(
peri_id = case_when(
n() > 1 ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))), "_", row_number()),
TRUE ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))))),
seqnames = substring(as.character(seqnames), 4, nchar(as.character(seqnames)))
) %>%
rename(seqnames = "chromosome") %>%
select(peri_id,chromosome, everything())
print(final_cgbh)
# write.csv(final_cgbh,"/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/Other/alpha_incl_all_pericentro_meta.csv", row.names = FALSE)
# from the T2T data select the ranges for the annotations of satellites that correspond to pericentromeric sats
cgbh_segs <- all_segs %>%
filter(!(grepl("^hor.*L\\)$", name)) &
!(grepl("rDNA", name))) %>%
select(c("seqnames","start", "end", "width", "name")) %>%
arrange(seqnames, start)
# Combine the adjacent ranges
comb_cgbh <- cgbh_segs %>%
group_by(seqnames) %>%
arrange(start) %>%
mutate(end_next = lead(start),
combined = ifelse(end == end_next & !is.na(end_next), TRUE, FALSE),
combined_group = 0) %>%
select(-"end_next") %>%
arrange(seqnames, start )
cgbh_subset <- comb_cgbh %>%
group_by(seqnames) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
ungroup()
for (i in 2:nrow(cgbh_subset)) {
cgbh_subset$combined_group[i] <- ifelse(
cgbh_subset$combined[i - 1],
cgbh_subset$combined_group[i - 1],
cgbh_subset$combined_group[i - 1] + 1
)
}
# Ensuring that the resulting combined regions start and end with HSat regions
adj_cgbh <- cgbh_subset %>%
group_by(seqnames, combined_group) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
summarise(start_bp = dplyr::first(start),
end_bp = last(end),
width_Mb = round(sum(width)/(1E6),4),
name = paste(name, collapse = ", ")) %>%
select(-c("combined_group"))
final_cgbh <- adj_cgbh %>%
group_by(seqnames) %>%
# filter((width_Mb == max(width_Mb)) | (width_Mb >= 1)) %>%
mutate(
peri_id = case_when(
n() > 1 ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))), "_", row_number()),
TRUE ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))))),
seqnames = substring(as.character(seqnames), 4, nchar(as.character(seqnames)))
) %>%
rename(seqnames = "chromosome") %>%
select(peri_id,chromosome, everything())
print(final_cgbh)
# write.csv(final_cgbh,"/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/Other/alpha_incl_all_pericentro_meta.csv", row.names = FALSE)
# from the T2T data select the ranges for the annotations of satellites that correspond to pericentromeric sats
cgbh_segs <- all_segs %>%
filter(!(grepl("^hor.*L\\)$", name)) &
!(grepl("rDNA", name))) %>%
select(c("seqnames","start", "end", "width", "name")) %>%
arrange(seqnames, start)
# Combine the adjacent ranges
comb_cgbh <- cgbh_segs %>%
group_by(seqnames) %>%
arrange(start) %>%
mutate(end_next = lead(start),
combined = ifelse(end == end_next & !is.na(end_next), TRUE, FALSE),
combined_group = 0) %>%
select(-"end_next") %>%
arrange(seqnames, start )
cgbh_subset <- comb_cgbh %>%
group_by(seqnames) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
ungroup()
for (i in 2:nrow(cgbh_subset)) {
cgbh_subset$combined_group[i] <- ifelse(
cgbh_subset$combined[i - 1],
cgbh_subset$combined_group[i - 1],
cgbh_subset$combined_group[i - 1] + 1
)
}
# Ensuring that the resulting combined regions start and end with HSat regions
adj_cgbh <- cgbh_subset %>%
group_by(seqnames, combined_group) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
summarise(start_bp = dplyr::first(start),
end_bp = last(end),
width_Mb = round(sum(width)/(1E6),4),
name = paste(name, collapse = ", ")) %>%
select(-c("combined_group"))
final_cgbh <- adj_cgbh %>%
group_by(seqnames) %>%
filter((width_Mb == max(width_Mb)) | (width_Mb >= 1)) %>%
mutate(
peri_id = case_when(
n() > 1 ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))), "_", row_number()),
TRUE ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))))),
seqnames = substring(as.character(seqnames), 4, nchar(as.character(seqnames)))
) %>%
rename(seqnames = "chromosome") %>%
select(peri_id,chromosome, everything())
print(final_cgbh)
# write.csv(final_cgbh,"/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/Other/alpha_incl_all_pericentro_meta.csv", row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
instance_count = n(),
.groups = 'drop'  # This option removes the grouping structure after summation
) %>%
select(sampleID, peri_id, cnv, instance_count)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
#
# cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
# cnv_reformat[is.na(cnv_reformat)] <- 0
sample_count_frequencies <- cnv_long %>%
group_by(instance_count) %>%
summarise(record_count = n(),
,.groups = 'drop') %>%
mutate(record_pcnt =paste0( round(record_count/sum(sample_count_frequencies$record_count)*100,3),"%"))
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
instance_count = n(),
.groups = 'drop'  # This option removes the grouping structure after summation
) %>%
select(sampleID, peri_id, cnv, instance_count)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
#
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# sample_count_frequencies <- cnv_long %>%
#   group_by(instance_count) %>%
#   summarise(record_count = n(),
#             ,.groups = 'drop') %>%
#   mutate(record_pcnt =paste0( round(record_count/sum(sample_count_frequencies$record_count)*100,3),"%"))
# write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
View(cnv_reformat)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
instance_count = n(),
.groups = 'drop'  # This option removes the grouping structure after summation
) %>%
select(sampleID, peri_id, cnv, instance_count)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
#
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# sample_count_frequencies <- cnv_long %>%
#   group_by(instance_count) %>%
#   summarise(record_count = n(),
#             ,.groups = 'drop') %>%
#   mutate(record_pcnt =paste0( round(record_count/sum(sample_count_frequencies$record_count)*100,3),"%"))
write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/lim_alpha_incl_TCGA_pericentro_cnv.csv",
row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
instance_count = n(),
.groups = 'drop'  # This option removes the grouping structure after summation
) %>%
select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
#
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# sample_count_frequencies <- cnv_long %>%
#   group_by(instance_count) %>%
#   summarise(record_count = n(),
#             ,.groups = 'drop') %>%
#   mutate(record_pcnt =paste0( round(record_count/sum(sample_count_frequencies$record_count)*100,3),"%"))
write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/lim_alpha_incl_TCGA_pericentro_cnv.csv",
row.names = FALSE)
# from the T2T data select the ranges for the annotations of satellites that correspond to pericentromeric sats
cgbh_segs <- all_segs %>%
filter(!(grepl("^hor.*L\\)$", name)) &
!(grepl("rDNA", name))) %>%
select(c("seqnames","start", "end", "width", "name")) %>%
arrange(seqnames, start)
# Combine the adjacent ranges
comb_cgbh <- cgbh_segs %>%
group_by(seqnames) %>%
arrange(start) %>%
mutate(end_next = lead(start),
combined = ifelse(end == end_next & !is.na(end_next), TRUE, FALSE),
combined_group = 0) %>%
select(-"end_next") %>%
arrange(seqnames, start )
cgbh_subset <- comb_cgbh %>%
group_by(seqnames) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
ungroup()
for (i in 2:nrow(cgbh_subset)) {
cgbh_subset$combined_group[i] <- ifelse(
cgbh_subset$combined[i - 1],
cgbh_subset$combined_group[i - 1],
cgbh_subset$combined_group[i - 1] + 1
)
}
# Ensuring that the resulting combined regions start and end with HSat regions
adj_cgbh <- cgbh_subset %>%
group_by(seqnames, combined_group) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
summarise(start_bp = dplyr::first(start),
end_bp = last(end),
width_Mb = round(sum(width)/(1E6),4),
name = paste(name, collapse = ", ")) %>%
select(-c("combined_group"))
final_cgbh <- adj_cgbh %>%
group_by(seqnames) %>%
# filter((width_Mb == max(width_Mb)) | (width_Mb >= 1)) %>%
mutate(
peri_id = case_when(
n() > 1 ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))), "_", row_number()),
TRUE ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))))),
seqnames = substring(as.character(seqnames), 4, nchar(as.character(seqnames)))
) %>%
rename(seqnames = "chromosome") %>%
select(peri_id,chromosome, everything())
print(final_cgbh)
# write.csv(final_cgbh,"/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/Other/alpha_incl_all_pericentro_meta.csv", row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
instance_count = n(),
.groups = 'drop'  # This option removes the grouping structure after summation
) %>%
select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
#
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# sample_count_frequencies <- cnv_long %>%
#   group_by(instance_count) %>%
#   summarise(record_count = n(),
#             ,.groups = 'drop') %>%
#   mutate(record_pcnt =paste0( round(record_count/sum(sample_count_frequencies$record_count)*100,3),"%"))
write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/unlim_alpha_incl_TCGA_pericentro_cnv.csv",
row.names = FALSE)
