knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
# Load the packages
library(plyr)
library(dplyr)
library(tidyverse)
library(ggpubr)
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(strsplit(strings, "\\."), function(x) x[index])
return(element_list)
}
# Load the transposed data.
t_data <- read.csv("Data/RNA_Data/TCGA_Norm/Transposed_scaled_&_reduced_df.csv")
test <- t_data[0:5000, 0:5000]
print(dim(t_data))
soi <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_mRNA_TPM_SOI.csv")
soi_genes <-soi[,2]
# Filter the data down to the Set of interest.
filtered_transposed <- test[, c(TRUE, colnames(test)[-1] %in% soi_genes)]
print(dim(filtered_transposed))
# Create the distance matrix on the filtered data.
dist_matrix <- filtered_transposed %>%
dist()
# Produce the MDS object.
mds <- cmdscale(dist_matrix)
# Convert the MDS object to a dataframe with additional features
mds_df <- as.data.frame(mds) %>%
mutate(cancer_type = extract_element(filtered_transposed$X, 1),
sample_type = extract_element(filtered_transposed$X, 3))
# Create the plots of the MDS.
sample_mds <- ggscatter(mds_df, x = "V1", y = "V2",
color = "sample_type", # Colour based on the sample type
size = 1,
repel = TRUE)
cancer_mds <- ggscatter(mds_df, x = "V1", y = "V2",
color = "cancer_type", # Colour based on the cancer type
size = 1,
repel = TRUE)+
theme(legend.position = "none")
# Save the plots.
ggsave("sample_mds_plot.png",
plot = sample_mds,
width = 8,
height = 6,
dpi = 300)
ggsave("cancer_mds_plot.png",
plot = cancer_mds,
width = 8,
height = 6,
dpi = 300)
View(filtered_transposed)
# Filter the data down to the Set of interest.
intermediate_test <- test %>% column_to_rownames(var = "X")
filtered_transposed <- test[,colnames(test) %in% soi_genes)]
# Filter the data down to the Set of interest.
intermediate_test <- test %>% column_to_rownames(var = "X")
filtered_transposed <- test[,colnames(intermediate_test) %in% soi_genes)]
# Filter the data down to the Set of interest.
intermediate_test <- test %>% column_to_rownames(var = "X")
filtered_transposed <- test[,colnames(intermediate_test) %in% soi_genes]
print(dim(filtered_transposed))
View(intermediate_test)
View(test)
View(mds)
