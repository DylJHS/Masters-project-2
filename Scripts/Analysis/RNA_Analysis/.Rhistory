aes(group = Participant),
color = "purple",
linetype = 2)
bxp2
bxp2 <- ggpaired(pivot_combos, x = "type", y = "Expression",
id = "Participant",
order = c("Normal", "Cancerous"),
ylab = "Expression", xlab = "Condition",
color = "type",
linetype = 0,
line.size = 0.01,
line.color = "purple",
ggtheme = theme_classic(), palette = "lancet")+
facet_wrap(~set_group, ncol = 6, scales = "free_y")  +
geom_line(data = subset(pivot_combos,Participant %in% sample(unique(pivot_combos$Participant),9)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp2
bxp2 <- ggpaired(pivot_combos, x = "type", y = "Expression",
id = "Participant",
order = c("Normal", "Cancerous"),
ylab = "Expression", xlab = "Condition",
color = "type",
linetype = 1,
line.size = 0.01,
line.color = "purple",
ggtheme = theme_classic(), palette = "lancet")+
facet_wrap(~set_group, ncol = 6, scales = "free_y")  +
geom_line(data = subset(pivot_combos,Participant %in% sample(unique(pivot_combos$Participant),9)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp2
bxp2 <- ggpaired(pivot_combos, x = "type", y = "Expression",
id = "Participant",
order = c("Normal", "Cancerous"),
ylab = "Expression", xlab = "Condition",
color = "type",
linetype = 1,
line.size = 1,
line.color = "purple",
ggtheme = theme_classic(), palette = "lancet")+
facet_wrap(~set_group, ncol = 6, scales = "free_y")  +
geom_line(data = subset(pivot_combos,Participant %in% sample(unique(pivot_combos$Participant),9)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp2
bxp2 <- ggpaired(pivot_combos, x = "type", y = "Expression",
id = "Participant",
order = c("Normal", "Cancerous"),
ylab = "Expression", xlab = "Condition",
color = "type",
linetype = 0,
line.size = 1,
line.color = "purple",
ggtheme = theme_classic(), palette = "lancet")+
facet_wrap(~set_group, ncol = 6, scales = "free_y")  +
geom_line(data = subset(pivot_combos,Participant %in% sample(unique(pivot_combos$Participant),9)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp2
bxp2 <- ggpaired(pivot_combos, x = "type", y = "Expression",
id = "Participant",
order = c("Normal", "Cancerous"),
ylab = "Expression", xlab = "Condition",
color = "type",
linetype = 0,
line.size = 1,
line.color = "purple",
ggtheme = theme_classic(), palette = "lancet")+
facet_wrap(~set_group, ncol = 6, scales = "free_y")  +
geom_line(data = subset(pivot_combos,Participant %in% sample(unique(pivot_combos$Participant),9)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp2
full_results <- do.call(rbind, results)
full_results <- mutate(full_results, Adjusted_p = p.adjust(full_results$p, method = "BH"),
Significant_value = ifelse(Adjusted_p < 0.05, "TRUE" , "FALSE"),
ex_Level = ifelse(Adjusted_p <= observed_val, "TRUE" , "FALSE"),
sim_Level = ifelse(p.signif == "****", "TRUE" , "FALSE"))
kable(head(full_results))
Contrast_agg_count_table <- full_results %>% group_by(sim_Level) %>% dplyr::summarise(count = n())
Contrast_agg_count_table$Freq <- round(Contrast_agg_count_table$count / sum(Contrast_agg_count_table$count), 3)
kable(Contrast_agg_count_table)
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(plyr)
library(coin)
library(knitr)
library(rstatix)
library(ggpubr)
library(GGally)
library(tidyverse)
library(psych)
library(ggsci)
getOption("max.print")
set.seed(123)
soi_nrm <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_Normal_mRNA_TPM_SOI.csv")
soi_can <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_mRNA_TPM_SOI.csv")
Meta_data <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
calculate_summary <- function(input_dataframe) {
df_name <- deparse(substitute(input_dataframe))
# Calculate column means
means <- colMeans(input_dataframe[, -c(1, 2)], na.rm = TRUE)
# Create a new dataframe to store the summary
Summary_Dataframe <- data.frame( Mean = means)
prefix <- sub("^(.*?)_.*$", "\\1", df_name)
colnames(Summary_Dataframe)[colnames(Summary_Dataframe) == "Mean"] <- paste0( "geom_mean_",prefix)
return(Summary_Dataframe)
}
soi_combo <- merge(calculate_summary(soi_nrm) %>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
calculate_summary(soi_can)%>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
by = "Participant",
all = FALSE,
suffixes = c("_nrm","_can"))
kable(head(soi_combo, n = 15))
data <- soi_combo %>%
gather(key = "Condition", value = "Geom_mean", geom_mean_soi_nrm, geom_mean_soi_can)
kable(head(data, n = 15))
soi_combo$DIF <- soi_combo$geom_mean_soi_can - soi_combo$geom_mean_soi_nrm
ggplot(soi_combo, aes(x = "", y = soi_combo$DIF)) +
stat_boxplot(geom = "errorbar",
width = 0.15) +
geom_boxplot()
describe(soi_combo) %>% kable()
bxp <- ggpaired(data, x = "Condition", y = "Geom_mean",
id = "Participant",
order = c("geom_mean_soi_nrm", "geom_mean_soi_can"),
ylab = "Geom_mean", xlab = "Condition",
color = "Condition",
linetype = 0,
line.size = 0.02,
line.color = "grey35",
ggtheme = theme_classic(), palette = "lancet")+
geom_line(data = subset(data,Participant %in% sample(unique(data$Participant),15)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp
stat.test <- data  %>%
wilcox_test(Geom_mean ~ Condition, paired = TRUE, alternative = "greater") %>%
add_significance()
stat.test
observed_val <- stat.test$p
start_time <- Sys.time()
All_combos <- soi_combo %>%  select(-c("DIF"))
results <- list()
# Loop over the control datasets
num_datasets <- 5
for (i in 1:num_datasets) {
can_ctrl_file <- paste("Data/RNA_Data/TCGA_TPM/TCGA_Cancer_CTRL_Sets/TCGA_TPM_RNA_Control_df", i, ".csv", sep = "")
can_ctrl_set <- read.csv(can_ctrl_file)
nrm_ctrl_file <- paste("Data/RNA_Data/TCGA_TPM/TCGA_Normal_CTRL_Sets/TCGA_Normal_mRNA_TPM_CTRL_Set", i, ".csv", sep = "")
nrm_ctrl_set <- read.csv(nrm_ctrl_file)
new_combo <- merge(calculate_summary(nrm_ctrl_set)%>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
calculate_summary(can_ctrl_set) %>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
by = "Participant",
all = FALSE
)
new_combo <- new_combo %>%
dplyr::rename(
!!paste0("geom_mean_nrm_", i) := geom_mean_nrm,
!!paste0("geom_mean_can_", i) := geom_mean_can
)
All_combos <- All_combos %>% merge(new_combo,
by = "Participant",
all = FALSE
)
new_data <- new_combo %>%
gather(key = "Condition", value = "Geom_mean",2,3)
new_stat.test <- new_data  %>%
wilcox_test(Geom_mean ~ Condition, paired = TRUE, alternative = "less") %>%
add_significance()
results[[i]] <- new_stat.test
}
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(plyr)
library(coin)
library(knitr)
library(rstatix)
library(ggpubr)
library(GGally)
library(tidyverse)
library(psych)
library(ggsci)
getOption("max.print")
set.seed(123)
soi_nrm <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_Normal_mRNA_TPM_SOI.csv")
soi_can <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_mRNA_TPM_SOI.csv")
Meta_data <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
calculate_summary <- function(input_dataframe) {
df_name <- deparse(substitute(input_dataframe))
# Calculate column means
means <- colMeans(input_dataframe[, -c(1, 2)], na.rm = TRUE)
# Create a new dataframe to store the summary
Summary_Dataframe <- data.frame( Mean = means)
prefix <- sub("^(.*?)_.*$", "\\1", df_name)
colnames(Summary_Dataframe)[colnames(Summary_Dataframe) == "Mean"] <- paste0( "geom_mean_",prefix)
return(Summary_Dataframe)
}
soi_combo <- merge(calculate_summary(soi_nrm) %>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
calculate_summary(soi_can)%>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
by = "Participant",
all = FALSE,
suffixes = c("_nrm","_can"))
kable(head(soi_combo, n = 15))
data <- soi_combo %>%
gather(key = "Condition", value = "Geom_mean", geom_mean_soi_nrm, geom_mean_soi_can)
kable(head(data, n = 15))
soi_combo$DIF <- soi_combo$geom_mean_soi_can - soi_combo$geom_mean_soi_nrm
ggplot(soi_combo, aes(x = "", y = soi_combo$DIF)) +
stat_boxplot(geom = "errorbar",
width = 0.15) +
geom_boxplot()
describe(soi_combo) %>% kable()
bxp <- ggpaired(data, x = "Condition", y = "Geom_mean",
id = "Participant",
order = c("geom_mean_soi_nrm", "geom_mean_soi_can"),
ylab = "Geom_mean", xlab = "Condition",
color = "Condition",
linetype = 0,
line.size = 0.02,
line.color = "grey35",
ggtheme = theme_classic(), palette = "lancet")+
geom_line(data = subset(data,Participant %in% sample(unique(data$Participant),15)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp
stat.test <- data  %>%
wilcox_test(Geom_mean ~ Condition, paired = TRUE, alternative = "greater") %>%
add_significance()
stat.test
observed_val <- stat.test$p
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(plyr)
library(coin)
library(knitr)
library(rstatix)
library(ggpubr)
library(GGally)
library(tidyverse)
library(psych)
library(ggsci)
getOption("max.print")
set.seed(123)
soi_nrm <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_Normal_mRNA_TPM_SOI.csv")
soi_can <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_mRNA_TPM_SOI.csv")
Meta_data <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
calculate_summary <- function(input_dataframe) {
df_name <- deparse(substitute(input_dataframe))
# Calculate column means
means <- colMeans(input_dataframe[, -c(1, 2)], na.rm = TRUE)
# Create a new dataframe to store the summary
Summary_Dataframe <- data.frame( Mean = means)
prefix <- sub("^(.*?)_.*$", "\\1", df_name)
colnames(Summary_Dataframe)[colnames(Summary_Dataframe) == "Mean"] <- paste0( "geom_mean_",prefix)
return(Summary_Dataframe)
}
soi_combo <- merge(calculate_summary(soi_nrm) %>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
calculate_summary(soi_can)%>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
by = "Participant",
all = FALSE,
suffixes = c("_nrm","_can"))
kable(head(soi_combo, n = 15))
data <- soi_combo %>%
gather(key = "Condition", value = "Geom_mean", geom_mean_soi_nrm, geom_mean_soi_can)
kable(head(data, n = 15))
soi_combo$DIF <- soi_combo$geom_mean_soi_can - soi_combo$geom_mean_soi_nrm
ggplot(soi_combo, aes(x = "", y = soi_combo$DIF)) +
stat_boxplot(geom = "errorbar",
width = 0.15) +
geom_boxplot()
describe(soi_combo) %>% kable()
bxp <- ggpaired(data, x = "Condition", y = "Geom_mean",
id = "Participant",
order = c("geom_mean_soi_nrm", "geom_mean_soi_can"),
ylab = "Geom_mean", xlab = "Condition",
color = "Condition",
linetype = 0,
line.size = 0.02,
line.color = "grey35",
ggtheme = theme_classic(), palette = "lancet")+
geom_line(data = subset(data,Participant %in% sample(unique(data$Participant),15)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp
stat.test <- data  %>%
wilcox_test(Geom_mean ~ Condition, paired = TRUE, alternative = "greater") %>%
add_significance()
stat.test
observed_val <- stat.test$p
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(plyr)
library(coin)
library(knitr)
library(rstatix)
library(ggpubr)
library(GGally)
library(tidyverse)
library(psych)
library(ggsci)
getOption("max.print")
set.seed(123)
soi_nrm <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_Normal_mRNA_TPM_SOI.csv")
soi_can <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_mRNA_TPM_SOI.csv")
Meta_data <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
calculate_summary <- function(input_dataframe) {
df_name <- deparse(substitute(input_dataframe))
# Calculate column means
means <- colMeans(input_dataframe[, -c(1, 2)], na.rm = TRUE)
# Create a new dataframe to store the summary
Summary_Dataframe <- data.frame( Mean = means)
prefix <- sub("^(.*?)_.*$", "\\1", df_name)
colnames(Summary_Dataframe)[colnames(Summary_Dataframe) == "Mean"] <- paste0( "geom_mean_",prefix)
return(Summary_Dataframe)
}
soi_combo <- merge(calculate_summary(soi_nrm) %>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
calculate_summary(soi_can)%>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
by = "Participant",
all = FALSE,
suffixes = c("_nrm","_can"))
kable(head(soi_combo, n = 15))
data <- soi_combo %>%
gather(key = "Condition", value = "Geom_mean", geom_mean_soi_nrm, geom_mean_soi_can)
kable(head(data, n = 15))
soi_combo$DIF <- soi_combo$geom_mean_soi_can - soi_combo$geom_mean_soi_nrm
ggplot(soi_combo, aes(x = "", y = soi_combo$DIF)) +
stat_boxplot(geom = "errorbar",
width = 0.15) +
geom_boxplot()
describe(soi_combo) %>% kable()
bxp <- ggpaired(data, x = "Condition", y = "Geom_mean",
id = "Participant",
order = c("geom_mean_soi_nrm", "geom_mean_soi_can"),
ylab = "Geom_mean", xlab = "Condition",
color = "Condition",
linetype = 0,
line.size = 0.02,
line.color = "grey35",
ggtheme = theme_classic(), palette = "lancet")+
geom_line(data = subset(data,Participant %in% sample(unique(data$Participant),15)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp
stat.test <- data  %>%
wilcox_test(Geom_mean ~ Condition, paired = TRUE, alternative = "greater") %>%
add_significance()
stat.test
observed_val <- stat.test$p
start_time <- Sys.time()
All_combos <- soi_combo %>%  select(-c("DIF"))
results <- list()
# Loop over the control datasets
num_datasets <- 547
for (i in 1:num_datasets) {
can_ctrl_file <- paste("Data/RNA_Data/TCGA_TPM/TCGA_Cancer_CTRL_Sets/TCGA_TPM_RNA_Control_df", i, ".csv", sep = "")
can_ctrl_set <- read.csv(can_ctrl_file)
nrm_ctrl_file <- paste("Data/RNA_Data/TCGA_TPM/TCGA_Normal_CTRL_Sets/TCGA_Normal_mRNA_TPM_CTRL_Set", i, ".csv", sep = "")
nrm_ctrl_set <- read.csv(nrm_ctrl_file)
new_combo <- merge(calculate_summary(nrm_ctrl_set)%>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
calculate_summary(can_ctrl_set) %>%
rownames_to_column(var = "id") %>%
rowwise() %>%
mutate( Participant = strsplit(id,"\\.")[[1]][3]) %>%
select(-c("id")),
by = "Participant",
all = FALSE
)
new_combo <- new_combo %>%
dplyr::rename(
!!paste0("geom_mean_nrm_", i) := geom_mean_nrm,
!!paste0("geom_mean_can_", i) := geom_mean_can
)
All_combos <- All_combos %>% merge(new_combo,
by = "Participant",
all = FALSE
)
new_data <- new_combo %>%
gather(key = "Condition", value = "Geom_mean",2,3)
new_stat.test <- new_data  %>%
wilcox_test(Geom_mean ~ Condition, paired = TRUE, alternative = "less") %>%
add_significance()
results[[i]] <- new_stat.test
}
All_combos <- All_combos %>% dplyr::rename(geom_mean_soi_nrm_SOI = geom_mean_soi_nrm,
geom_mean_soi_can_SOI = geom_mean_soi_can
)
it_time <- Sys.time()
cat('\n',i,"total duration: ", it_time - start_time, "minutes")
full_results <- do.call(rbind, results)
full_results <- mutate(full_results, Adjusted_p = p.adjust(full_results$p, method = "BH"),
Significant_value = ifelse(Adjusted_p < 0.05, "TRUE" , "FALSE"),
ex_Level = ifelse(Adjusted_p <= observed_val, "TRUE" , "FALSE"),
sim_Level = ifelse(p.signif == "****", "TRUE" , "FALSE"))
kable(head(full_results))
Contrast_agg_count_table <- full_results %>% group_by(sim_Level) %>% dplyr::summarise(count = n())
Contrast_agg_count_table$Freq <- round(Contrast_agg_count_table$count / sum(Contrast_agg_count_table$count), 3)
kable(Contrast_agg_count_table)
set.seed(123)
controls <- sample(1:100, 5)
names <- c("Participant", "geom_mean_soi_nrm_SOI", "geom_mean_soi_can_SOI",unlist(lapply(controls, function(i) paste("geom_mean_nrm", i, sep ="_"))),
unlist(lapply(controls, function(i) paste("geom_mean_can", i, sep ="_"))))
select_combos <- All_combos %>% dplyr::select(c(names))
pivot_combos <- select_combos %>% pivot_longer(!Participant, names_to = "set", values_to = "Expression") %>%
mutate(type = if_else(grepl("can", set), "Cancerous","Normal"),
set_group = sub(".*_", "", set))
bxp2 <- ggpaired(pivot_combos, x = "type", y = "Expression",
id = "Participant",
order = c("Normal", "Cancerous"),
ylab = "Expression", xlab = "Condition",
color = "type",
linetype = 0,
line.size = 1,
line.color = "purple",
ggtheme = theme_classic(), palette = "lancet")+
facet_wrap(~set_group, ncol = 6, scales = "free_y")+
theme(strip.text.x = c("new", "new2", "nw", "n43", "53","534"),
labeller = labeller())+
geom_line(data = subset(pivot_combos,Participant %in% sample(unique(pivot_combos$Participant),9)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp2
View(soi_combo)
bxp2 <- ggpaired(pivot_combos, x = "type", y = "Expression",
id = "Participant",
order = c("Normal", "Cancerous"),
ylab = "Expression", xlab = "Condition",
color = "type",
linetype = 0,
line.size = 1,
line.color = "purple",
ggtheme = theme_classic(), palette = "lancet")+
facet_wrap(~set_group, ncol = 6, scales = "free_y")+
theme(strip.text.x = c("new", "new2", "nw", "n43", "53","534"),
labeller = labeller())+
geom_line(data = subset(pivot_combos,Participant %in% sample(unique(pivot_combos$Participant),9)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp2
bxp2 <- ggpaired(pivot_combos, x = "type", y = "Expression",
id = "Participant",
order = c("Normal", "Cancerous"),
ylab = "Expression", xlab = "Condition",
color = "type",
linetype = 0,
line.size = 1,
line.color = "purple",
ggtheme = theme_classic(), palette = "lancet")+
facet_wrap(~set_group, ncol = 6, scales = "free_y")+
# theme(strip.text.x = c("new", "new2", "nw", "n43", "53","534"),
#       labeller = labeller())+
geom_line(data = subset(pivot_combos,Participant %in% sample(unique(pivot_combos$Participant),9)),
aes(group = Participant),
color = "purple",
linetype = 2)
bxp2
