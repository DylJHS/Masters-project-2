silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
n <- 100
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n)
for (k in 2:100) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(pheatmap)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(ComplexHeatmap)
library(circlize)
library(tiff)
library(cluster)
getOption("max.print")
first <- read.csv("Data/CNV_Data/Genes_of_Interest_CNV_Data_df.csv")
print(head(first))
set.seed(123)
Sample_data <- first[sample(1:10000, 500),]
print(head(Sample_data))
column_names <- colnames(Sample_data)[-1]
cor_data <- Sample_data[,column_names]
print(head(cor_data))
# Pearson
cnv_cor_pear <- cor(cor_data, method = "pearson")
Pears_dist_matrix <- apply(cnv_cor_pear, MARGIN = c(1, 2), FUN = function(x) {
result <- 1-x
return(result)})
# Euclidean
trans_data <- t(cor_data)
Eucl_dist_matrix <- as.matrix(dist(trans_data))
# print(Eucl_dist_matrix)
n <- 30
Pears_dist_plot <-Heatmap(Pears_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Pears_dist_plot)
Euc_dist_plot <-Heatmap(Eucl_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Euc_dist_plot)
n <- 100
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n)
for (k in 2:100) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 100
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n-1)
for (k in 2:100) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k-1] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 100
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 99)
for (k in 2:100) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k-1] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 100
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 101)
for (k in 2:100) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
n <- 100
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 100)
for (k in 2:99) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 3)
for (k in 2:4) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 2)
for (k in 2:4) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 2)
for (k in 2:3) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 3)
for (k in 2:3) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 3)
for (k in 2:4) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 3)
for (k in 2:3) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k-1] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 2)
for (k in 2:3) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
# plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 2)
for (k in 2:3) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
# plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = 2)
for (k in 2:3) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k-1] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
# plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
silhouette_scores[k-1] <- silhouette(kmeans_model$cluster, dist(cor_data))
}
# Plot the silhouette method
# plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
# plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 5
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 10
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
View(kmeans_model)
n <- 50
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 2
Pears_dist_plot <-Heatmap(Pears_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Pears_dist_plot)
Euc_dist_plot <-Heatmap(Eucl_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Euc_dist_plot)
n <- 100
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(pheatmap)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(ComplexHeatmap)
library(circlize)
library(tiff)
library(cluster)
getOption("max.print")
first <- read.csv("Data/CNV_Data/Genes_of_Interest_CNV_Data_df.csv")
print(head(first))
set.seed(123)
Sample_data <- first[sample(1:10000, 5000),]
print(head(Sample_data))
column_names <- colnames(Sample_data)[-1]
cor_data <- Sample_data[,column_names]
print(head(cor_data))
# Pearson
cnv_cor_pear <- cor(cor_data, method = "pearson")
Pears_dist_matrix <- apply(cnv_cor_pear, MARGIN = c(1, 2), FUN = function(x) {
result <- 1-x
return(result)})
# Euclidean
trans_data <- t(cor_data)
Eucl_dist_matrix <- as.matrix(dist(trans_data))
# print(Eucl_dist_matrix)
n <- 2
Pears_dist_plot <-Heatmap(Pears_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Pears_dist_plot)
Euc_dist_plot <-Heatmap(Eucl_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Euc_dist_plot)
n <- 100
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 30
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 30
Pears_dist_plot <-Heatmap(Pears_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Pears_dist_plot)
Euc_dist_plot <-Heatmap(Eucl_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Euc_dist_plot)
n <- 30
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 30
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, Pears_dist_matrix)
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 30
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, Pears_dist_matrix)
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 30
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - Pears_dist_matrix))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 30
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cnv_cor_pear))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 30
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
# Ensure the dimensions are compatible
if (length(kmeans_model$cluster) != nrow(cor_data)) {
stop("Mismatch between cluster labels and data points")
}
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cnv_cor_pear))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 30
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
# Ensure the dimensions are compatible
if (length(kmeans_model$cluster) != nrow(cor_data)) {
stop("Mismatch between cluster labels and data points")
}
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cnv_cor_pear))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
# Ensure the dimensions are compatible
if (length(kmeans_model$cluster) != nrow(cor_data)) {
stop("Mismatch between cluster labels and data points")
}
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cnv_cor_pear))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cnv_cor_pear))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cor(cor_data)))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
n <- 3
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cor(trans_data)))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 5
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cor(trans_data)))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 15
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cor(trans_data)))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 2
Pears_dist_plot <-Heatmap(Pears_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Pears_dist_plot)
Euc_dist_plot <-Heatmap(Eucl_dist_matrix,
rect_gp = gpar(col = "black", lwd = 0.05),
col = colorRamp2(c(0, 1, 2), c("#20c712", "white", "purple2")),
row_names_gp = gpar(fontsize = 2),
column_names_gp = gpar(fontsize = 2),
column_km = n,
column_km_repeats = 300
)
print(Euc_dist_plot)
n <- 5
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, as.dist(1 - cor(trans_data)))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
n <- 5
# Calculate silhouette scores for different values of k
silhouette_scores <- numeric(length = n - 1)  # Adjust the length
for (k in 2:n) {  # Start from k=2
kmeans_model <- kmeans(cor_data, centers = k)
sil_score <- silhouette(kmeans_model$cluster, dist(cor_data))
silhouette_scores[k-1] <- mean(sil_score[, 3])  # Assuming you want the mean silhouette width
}
# Plot the silhouette method
plot(2:n, silhouette_scores[2:n], type = "b", xlab = "Number of Clusters (k)", ylab = "Silhouette Score")
