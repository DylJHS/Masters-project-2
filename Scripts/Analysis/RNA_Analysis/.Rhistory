describe(cnv_thresh[,2:22])
describe(cnv_thresh[,2:22])
source("~/.active-rstudio-document", echo=TRUE)
library(dplyr)
library(plyr)
library(knitr)
library(tidyverse)
library(edgeR)
library(limma)
library(data.table)
library(ggpubr)
library(psych)
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(knitr)
library(tidyverse)
library(edgeR)
library(limma)
library(EnhancedVolcano)
library(ggrepel)
library(data.table)
library(AnnotationDbi)
library(org.Hs.eg.db)
loc <- "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Plots/RNA_Plots/RNA_Plts_Part_I/DGEA_plots/"
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(strsplit(strings, "\\."), function(x) x[index])
return(element_list)
}
# Using the TCGA PanCan RSEM Expected Counts
original <- read.csv("Data/RNA_Data/TCGA_Norm/tcga_gene_expected_count.csv")
order_data <- original[,order(colnames(original))]
# Cancer/Tissue Metadata
tss_meta <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
abbrv_meta <- read.csv("Data/Other/TCGA_meta/bcrBatchCode.tsv", sep = "\t")
meta <- left_join(tss_meta %>%
dplyr::select(c("TSS.Code", "Study.Name")) %>%
distinct() %>%
sapply(trimws) %>%
as.data.frame(),
abbrv_meta %>%
dplyr::select(c("Study.Abbreviation", "Study.Name")) %>%
distinct()%>%
sapply(trimws) %>%
as.data.frame(),
by = "Study.Name")
# Gene Metadata
gene_ids <- read.delim("Data/Other/TCGA_meta/TCGA_PanCan_TPM_Gene_Annotations.txt")
# SOI genes
soi <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_mRNA_TPM_SOI.csv")
soi_genes <-soi[,2]
transformed_data <- order_data
rownames(transformed_data) <- NULL
untransform <- function(x) {#Function to convert the log transformed counts back into original counts
return(ceiling((2^x)-1))
}
count_data <- transformed_data %>%
mutate_at(vars(-1), untransform)
counts_data <- right_join(gene_ids %>%
dplyr::select(c("id", "gene")) %>%
sapply(trimws) %>%
as.data.frame(),
count_data,
by = c("id" = "sample")) %>%
dplyr::select(-"id")
counts_data <- counts_data %>%
mutate(gene = trimws(gene))
ids <- colnames(counts_data)[-1]
participants <- extract_element(ids, 3)
condition <- extract_element(ids, 4)
tissue_type <- extract_element(ids, 2)
column_names <- c("Genes" ,  paste(tissue_type, participants, condition, sep = "."))
colnames(counts_data) <- column_names
# Convert data to a data.table for faster processing during the grouping of the duplicate genes
setDT(counts_data)
# Combine duplicate genes together using the median of the expression
grouped <- counts_data[, lapply(.SD, function(x) if (length(x) > 1) median(x, na.rm = TRUE) else x), by = Genes, .SDcols = -"Genes"]
ids <- colnames(counts_data)[-1]
participants <- extract_element(ids, 3)
condition <- extract_element(ids, 4)
tissue_type <- extract_element(ids, 2)
column_names <- c("Genes" ,  paste(tissue_type, participants, condition, sep = "."))
colnames(counts_data) <- column_names
# Convert data to a data.table for faster processing during the grouping of the duplicate genes
setDT(counts_data)
# Combine duplicate genes together using the median of the expression
grouped <- counts_data[, lapply(.SD, function(x) if (length(x) > 1) median(x, na.rm = TRUE) else x), by = Genes, .SDcols = -"Genes"]
View(original)
View(counts_data)
counts_data <- right_join(gene_ids %>%
dplyr::select(c("id", "gene")) %>%
sapply(trimws) %>%
as.data.frame(),
count_data,
by = c("id" = "sample")) %>%
dplyr::select(-"id")
counts_data <- counts_data %>%
mutate(gene = trimws(gene))
View(counts_data)
ids <- colnames(counts_data)[-1]
participants <- extract_element(ids, 3)
condition <- extract_element(ids, 4)
tissue_type <- extract_element(ids, 2)
column_names <- c("Genes" ,  paste(tissue_type, participants, condition, sep = "."))
colnames(counts_data) <- column_names
# Convert data to a data.table for faster processing during the grouping of the duplicate genes
setDT(counts_data)
# Combine duplicate genes together using the median of the expression
grouped <- counts_data[, lapply(.SD, function(x) if (length(x) > 1) median(x, na.rm = TRUE) else x), by = Genes, .SDcols = -"Genes"]
# Edit ids so as to be able to identify the condition
# Reset the row names to the Gene names
grouped_data <- as.data.frame(grouped)
data <- distinct(grouped_data) %>%
column_to_rownames(var = "Genes")
# Remove the unwanted sample types from the samples based on the code
codes_to_use <- c("01","02","03","04","05","08","09","10","11","12","14","40")
samples_to_use <- data %>%  dplyr::select(ends_with(codes_to_use))
# Map the codes by health status (cancer <= 9 < Normal)
mapped_data <- samples_to_use
new_column_names <- colnames(samples_to_use)
new_column_names <- ifelse(as.integer(substr(new_column_names, nchar(new_column_names) - 1, nchar(new_column_names))) > 9,
paste0(substr(new_column_names, 1, nchar(new_column_names) - 2), "N"),
paste0(substr(new_column_names, 1, nchar(new_column_names) - 2), "C"))
prefixes <- substr(new_column_names,1,2)
abbrvs <- meta$Study.Abbreviation[match(prefixes,meta$TSS.Code)]
column_names_prefixes <- paste0(abbrvs, substr(new_column_names, 3, nchar(new_column_names)))
colnames(mapped_data) <- column_names_prefixes
View(mapped_data)
column_names_prefixes
prefic
prefixes
abbrvs
new_column_names
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(plyr)
library(knitr)
library(tidyverse)
library(edgeR)
library(limma)
library(data.table)
library(ggpubr)
getOption("max.print")
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(strsplit(strings, "\\."), function(x) x[index])
return(element_list)
}
untransform <- function(x) {#Function to convert the log transformed counts back into original counts
return(ceiling((2^x)-1))
}
# RNAseq count data
original <- read.csv("Data/RNA_Data/TCGA_Norm/tcga_gene_expected_count.csv")
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(plyr)
library(knitr)
library(tidyverse)
library(edgeR)
library(limma)
library(data.table)
library(ggpubr)
getOption("max.print")
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(strsplit(strings, "\\."), function(x) x[index])
return(element_list)
}
untransform <- function(x) {#Function to convert the log transformed counts back into original counts
return(ceiling((2^x)-1))
}
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(plyr)
library(knitr)
library(tidyverse)
library(edgeR)
library(limma)
library(data.table)
library(ggpubr)
getOption("max.print")
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(strsplit(strings, "\\."), function(x) x[index])
return(element_list)
}
untransform <- function(x) {#Function to convert the log transformed counts back into original counts
return(ceiling((2^x)-1))
}
# RNAseq count data
original <- read.csv("Data/RNA_Data/TCGA_Norm/tcga_gene_expected_count.csv")
# test <- original[0:10000,0:10]
# Metadata
tss_meta <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
abbrv_meta <- read.csv("Data/Other/TCGA_meta/bcrBatchCode.tsv", sep = "\t")
sampletype <- read.csv("Data/Other/TCGA_meta/sampleType.tsv", sep = "\t", colClasses = c("character"))
# Gene Metadata
gene_ids <- read.delim("Data/Other/TCGA_meta/TCGA_PanCan_TPM_Gene_Annotations.txt")
# SOI genes
soi <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_mRNA_TPM_SOI.csv")
soi_genes <-soi[,2]
transformed_data <- test
transformed_data <- original
rownames(transformed_data) <- NULL
real_count_data <- transformed_data %>%
mutate_at(vars(-1), untransform)
count_data_ordered <- real_count_data[,order(colnames(real_count_data))]
# Combine the metadata
meta <- left_join(tss_meta %>%
dplyr::select(c("TSS.Code", "Study.Name")) %>%
distinct() %>%
sapply(trimws) %>%
as.data.frame(),
abbrv_meta %>%
dplyr::select(c("Study.Abbreviation", "Study.Name")) %>%
distinct()%>%
sapply(trimws) %>%
as.data.frame(),
by = "Study.Name")
ids <- colnames(count_data)[-1]
counts_data <- right_join(gene_ids %>%
dplyr::select(c("id", "gene")) %>%
sapply(trimws) %>%
as.data.frame(),
count_data_ordered,
by = c("id" = "sample")) %>%
dplyr::select(-"id")
count_data <- counts_data %>%
mutate(gene = trimws(gene))
ids <- colnames(count_data)[-1]
participants <- extract_element(ids, 3)
condition <- extract_element(ids, 4)
tissue_type <- extract_element(ids, 2)
column_names <- c("Genes" ,  paste(tissue_type, participants, condition, sep = "."))
colnames(count_data) <- column_names
column_names
tissue_type
View(abbrv_meta)
View(meta)
ids <- colnames(count_data)[-1]
participants <- extract_element(ids, 3)
condition <- extract_element(ids, 4)
tissue_type <- extract_element(ids, 2)
abbrvs <- meta$Study.Abbreviation[match(tissue_type,meta$TSS.Code)]
View(abbrv_meta)
abbrvs
tissue_type
counts_data <- right_join(gene_ids %>%
dplyr::select(c("id", "gene")) %>%
sapply(trimws) %>%
as.data.frame(),
count_data_ordered,
by = c("id" = "sample")) %>%
dplyr::select(-"id")
count_data <- counts_data %>%
mutate(gene = trimws(gene))
ids <- colnames(count_data)[-1]
participants <- extract_element(ids, 3)
condition <- extract_element(ids, 4)
tissue_type <- extract_element(ids, 2)
abbrvs <- meta$Study.Abbreviation[match(tissue_type,meta$TSS.Code)]
tissue_type
abbrvs
column_names <- c("Genes" ,  paste(abbrvs, participants, condition, sep = "."))
colnames(count_data) <- column_names
View(count_data_ordered)
View(count_data)
smaples <- column_names(count_data)
samples <- colnames(count_data)
samples <- count_data %>% select(-Genes) %>% colnames()
samples <- count_data %>% select(-Genes) %>% colnames(,)
samples <- count_data %>% select(-Genes) %>% colnames(.)
samples <- count_data %>% select(-"Genes") %>% colnames(.)
samples <- colnames(count_data %>% select(-"Genes"))
samples <- count_data %>% select(-"Genes")
samples <- count_data %>% select(-Genes)
samples <- count_data %>% dplyr::select(-Genes) %>% colnames()
samples
new_column_names <- colnames(ids)
new_column_names <- ifelse(as.integer(substr(new_column_names, nchar(new_column_names) - 1, nchar(new_column_names))) > 9,
paste0(substr(new_column_names, 1, nchar(new_column_names) - 2), "N"),
paste0(substr(new_column_names, 1, nchar(new_column_names) - 2), "C"))
new_column_names
ids <- colnames(count_data)[-1]
participants <- extract_element(ids, 3)
condition <- extract_element(ids, 4)
tissue_type <- extract_element(ids, 2)
abbrvs <- meta$Study.Abbreviation[match(tissue_type,meta$TSS.Code)]
new_column_names <- ids
new_column_names <- ids
new_column_names <- ifelse(as.integer(substr(new_column_names, nchar(new_column_names) - 1, nchar(new_column_names))) > 9,
paste0(substr(new_column_names, 1, nchar(new_column_names) - 2), "N"),
paste0(substr(new_column_names, 1, nchar(new_column_names) - 2), "C"))
new_column_names
ids <- colnames(count_data)[-1]
participants <- extract_element(ids, 3)
condition <- extract_element(ids, 4)
tissue_type <- extract_element(ids, 2)
abbrvs <- meta$Study.Abbreviation[match(tissue_type,meta$TSS.Code)]
new_column_names <- ids
new_column_names <- ifelse(as.integer(substr(new_column_names, nchar(new_column_names) - 1, nchar(new_column_names))) > 9,
paste0(substr(new_column_names, 1, nchar(new_column_names) - 2), "N"),
paste0(substr(new_column_names, 1, nchar(new_column_names) - 2), "C"))
new_column_names
samples <- count_data %>% dplyr::select(-Genes) %>% colnames()
samples_df <- as.data.frame(samples)
View(samples_df)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
group_by(samples) %>%
summarise(num = n())
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
group_by(samples) %>%
summarise(n())
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
group_by(samples) %>%
summarise(count())
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
group_by(samples) %>%
summarise(count = n())
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
group_by(samples) %>%
count()
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
filter(samples %in% starts_with(.,"OV"))
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
filter(starts_with(samples,"OV"))
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
filter("OV" %in% samples)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
filter(str_detect(samples, "^OV"))
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
group_by(extract_element(samples,2))
filter(str_detect(samples, "^OV"))
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
group_by(extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV"))
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
filter(str_detect(samples, "^OV")) %>%
group_by(extract_element(samples,2))
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
filter(str_detect(samples, "^OV")) %>%
group_by(mutate(part <- extract_element(samples,2)))
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
filter(str_detect(samples, "^OV")) %>%
group_by(mutate(part = extract_element(samples,2)))
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV"))
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
select(part) %>%
group_by(part) %>%
count()
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
select(part) %>%
count(part)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
dplyr::select(part) %>%
count(part)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
dplyr::select('part') %>%
count(part)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
dplyr::select(-samples) %>%
count(part)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
dplyr::select(-samples) %>%
count(.)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
count(.)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
dplyr::select(-samples) %>%
count(.)
View(samples_df)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV"))
View(meta)
View(samples_df)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
dplyr::select(-samples) %>%
count(.)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_d <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV")) %>%
dplyr::select(-samples) %>%
count(.)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV"))
View(samples_d)
View(samples_d)
View(samples_df)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV"),
as.numeric(extract_element(samples,3)) > 9
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV"),
as.numeric(extract_element(samples,3)) > 9)
samples <- count_data %>%
dplyr::select(-Genes) %>%
colnames()
samples_df <- as.data.frame(samples) %>%
mutate(part = extract_element(samples,2)) %>%
filter(str_detect(samples, "^OV"),
as.numeric(extract_element(samples,3)) < 9)
