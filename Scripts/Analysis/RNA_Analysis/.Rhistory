max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))),
FCcutoff = 1,
labSize = 4,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free") +
theme(strip.text = element_text(size = 13))
png(paste0(loc, "DGEA_VOLCANO_10TSS.png"), width = 1920, height = 1080)
print(usable_tissues_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
tissues_of_interest <- c("BRCA", "HNSC", "LIHC", "LUSC")
tissues_of_interest_expression <- full_expression_table %>% filter(Tissue %in% tissues_of_interest)
keyvals3 <- ifelse(
tissues_of_interest_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals3[is.na(keyvals3)] <- 'black'
names(keyvals3)[keyvals3 == 'red2'] <- 'Gene of Interest'
names(keyvals3)[keyvals3 == '#8B8B83'] <- 'Other'
tissues_of_interest_expression_volcano <- EnhancedVolcano(tissues_of_interest_expression ,
lab = tissues_of_interest_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals3,
pointSize = c(ifelse(tissues_of_interest_expression$Genes %in% soi_genes, 3, 0.5)),
drawConnectors = TRUE,
widthConnectors = 0.25,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))+0.2,
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))-0.2),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))+2),
FCcutoff = 1,
labSize = 4,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free")
png(paste0(loc, "DGEA_VOLCANO_4TSS.png"), width = 4096, height = 2160)
print(tissues_of_interest_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
usable_tissues <- c("BRCA", "COAD", "HNSC", "KICH", "KIRC", "KIRP","LIHC", "LUAD", "LUSC", "PRAD", "STAD", "THCA")
usable_tissues_expression <- full_expression_table %>% filter(Tissue %in% usable_tissues)
keyvals2 <- ifelse(
usable_tissues_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals2[is.na(keyvals2)] <- 'black'
names(keyvals2)[keyvals2 == 'red2'] <- 'Gene of Interest'
names(keyvals2)[keyvals2 == '#8B8B83'] <- 'Other'
usable_tissues_expression_volcano <- EnhancedVolcano(usable_tissues_expression ,
lab = usable_tissues_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals2,
pointSize = c(ifelse(usable_tissues_expression$Genes %in% soi_genes, 4, 1)),
drawConnectors = TRUE,
widthConnectors = 0.2,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC)),
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))),
FCcutoff = 1,
labSize = 5,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free") +
theme(strip.text = element_text(size = 13))
png(paste0(loc, "DGEA_VOLCANO_10TSS.png"), width = 1920, height = 1080)
print(usable_tissues_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
tissues_of_interest <- c("BRCA", "HNSC", "LIHC", "LUSC")
tissues_of_interest_expression <- full_expression_table %>% filter(Tissue %in% tissues_of_interest)
keyvals3 <- ifelse(
tissues_of_interest_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals3[is.na(keyvals3)] <- 'black'
names(keyvals3)[keyvals3 == 'red2'] <- 'Gene of Interest'
names(keyvals3)[keyvals3 == '#8B8B83'] <- 'Other'
tissues_of_interest_expression_volcano <- EnhancedVolcano(tissues_of_interest_expression ,
lab = tissues_of_interest_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals3,
pointSize = c(ifelse(tissues_of_interest_expression$Genes %in% soi_genes, 4, 1.2)),
drawConnectors = TRUE,
widthConnectors = 0.25,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))+0.2,
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))-0.2),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))+2),
FCcutoff = 1,
labSize = 5,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free")
png(paste0(loc, "DGEA_VOLCANO_4TSS.png"), width = 3840, height = 2160)
print(tissues_of_interest_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
usable_tissues <- c("BRCA", "COAD", "HNSC", "KICH", "KIRC", "KIRP","LIHC", "LUAD", "LUSC", "PRAD", "STAD", "THCA")
usable_tissues_expression <- full_expression_table %>% filter(Tissue %in% usable_tissues)
keyvals2 <- ifelse(
usable_tissues_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals2[is.na(keyvals2)] <- 'black'
names(keyvals2)[keyvals2 == 'red2'] <- 'Gene of Interest'
names(keyvals2)[keyvals2 == '#8B8B83'] <- 'Other'
usable_tissues_expression_volcano <- EnhancedVolcano(usable_tissues_expression ,
lab = usable_tissues_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals2,
pointSize = c(ifelse(usable_tissues_expression$Genes %in% soi_genes, 4.5, 2)),
drawConnectors = TRUE,
widthConnectors = 0.2,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC)),
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))),
FCcutoff = 1,
labSize = 6,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free") +
theme(strip.text = element_text(size = 13))
png(paste0(loc, "DGEA_VOLCANO_10TSS.png"), width = 3840, height = 2160)
print(usable_tissues_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
tissues_of_interest <- c("BRCA", "HNSC", "LIHC", "LUSC")
tissues_of_interest_expression <- full_expression_table %>% filter(Tissue %in% tissues_of_interest)
keyvals3 <- ifelse(
tissues_of_interest_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals3[is.na(keyvals3)] <- 'black'
names(keyvals3)[keyvals3 == 'red2'] <- 'Gene of Interest'
names(keyvals3)[keyvals3 == '#8B8B83'] <- 'Other'
tissues_of_interest_expression_volcano <- EnhancedVolcano(tissues_of_interest_expression ,
lab = tissues_of_interest_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals3,
pointSize = c(ifelse(tissues_of_interest_expression$Genes %in% soi_genes, 4, 1.2)),
drawConnectors = TRUE,
widthConnectors = 0.25,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))+0.2,
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))-0.2),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))+2),
FCcutoff = 1,
labSize = 5,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free")
png(paste0(loc, "DGEA_VOLCANO_4TSS.png"), width = 3840, height = 2160)
print(tissues_of_interest_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
usable_tissues <- c("BRCA", "COAD", "HNSC", "KICH", "KIRC", "KIRP","LIHC", "LUAD", "LUSC", "PRAD", "STAD", "THCA")
usable_tissues_expression <- full_expression_table %>% filter(Tissue %in% usable_tissues)
keyvals2 <- ifelse(
usable_tissues_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals2[is.na(keyvals2)] <- 'black'
names(keyvals2)[keyvals2 == 'red2'] <- 'Gene of Interest'
names(keyvals2)[keyvals2 == '#8B8B83'] <- 'Other'
usable_tissues_expression_volcano <- EnhancedVolcano(usable_tissues_expression ,
lab = usable_tissues_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals2,
pointSize = c(ifelse(usable_tissues_expression$Genes %in% soi_genes, 4.5, 2)),
drawConnectors = TRUE,
widthConnectors = 0.2,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC)),
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))),
FCcutoff = 1,
labSize = 6,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free") +
theme(strip.text = element_text(size = 13))
png(paste0(loc, "DGEA_VOLCANO_10TSS.png"), width = 2840, height = 1960)
print(usable_tissues_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
tissues_of_interest <- c("BRCA", "HNSC", "LIHC", "LUSC")
tissues_of_interest_expression <- full_expression_table %>% filter(Tissue %in% tissues_of_interest)
keyvals3 <- ifelse(
tissues_of_interest_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals3[is.na(keyvals3)] <- 'black'
names(keyvals3)[keyvals3 == 'red2'] <- 'Gene of Interest'
names(keyvals3)[keyvals3 == '#8B8B83'] <- 'Other'
tissues_of_interest_expression_volcano <- EnhancedVolcano(tissues_of_interest_expression ,
lab = tissues_of_interest_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals3,
pointSize = c(ifelse(tissues_of_interest_expression$Genes %in% soi_genes, 4, 1.2)),
drawConnectors = TRUE,
widthConnectors = 0.25,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))+0.2,
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))-0.2),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))+2),
FCcutoff = 1,
labSize = 5,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free")
png(paste0(loc, "DGEA_VOLCANO_4TSS.png"), width = 3840, height = 2160)
print(tissues_of_interest_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
usable_tissues <- c("BRCA", "COAD", "HNSC", "KICH", "KIRC", "KIRP","LIHC", "LUAD", "LUSC", "PRAD", "STAD", "THCA")
usable_tissues_expression <- full_expression_table %>% filter(Tissue %in% usable_tissues)
keyvals2 <- ifelse(
usable_tissues_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals2[is.na(keyvals2)] <- 'black'
names(keyvals2)[keyvals2 == 'red2'] <- 'Gene of Interest'
names(keyvals2)[keyvals2 == '#8B8B83'] <- 'Other'
usable_tissues_expression_volcano <- EnhancedVolcano(usable_tissues_expression ,
lab = usable_tissues_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals2,
pointSize = c(ifelse(usable_tissues_expression$Genes %in% soi_genes, 5, 3)),
drawConnectors = TRUE,
widthConnectors = 0.2,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC)),
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))),
FCcutoff = 1,
labSize = 7,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free") +
theme(strip.text = element_text(size = 13))
png(paste0(loc, "DGEA_VOLCANO_10TSS.png"), width = 2940, height = 2060)
print(usable_tissues_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
tissues_of_interest <- c("BRCA", "HNSC", "LIHC", "LUSC")
tissues_of_interest_expression <- full_expression_table %>% filter(Tissue %in% tissues_of_interest)
keyvals3 <- ifelse(
tissues_of_interest_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals3[is.na(keyvals3)] <- 'black'
names(keyvals3)[keyvals3 == 'red2'] <- 'Gene of Interest'
names(keyvals3)[keyvals3 == '#8B8B83'] <- 'Other'
tissues_of_interest_expression_volcano <- EnhancedVolcano(tissues_of_interest_expression ,
lab = tissues_of_interest_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals3,
pointSize = c(ifelse(tissues_of_interest_expression$Genes %in% soi_genes, 6, 2.5)),
drawConnectors = TRUE,
widthConnectors = 0.25,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))+0.2,
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))-0.2),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))+2),
FCcutoff = 1,
labSize = 8,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free")
png(paste0(loc, "DGEA_VOLCANO_4TSS.png"), width = 3840, height = 2160)
print(tissues_of_interest_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
usable_tissues <- c("BRCA", "COAD", "HNSC", "KICH", "KIRC", "KIRP","LIHC", "LUAD", "LUSC", "PRAD", "STAD", "THCA")
usable_tissues_expression <- full_expression_table %>% filter(Tissue %in% usable_tissues)
keyvals2 <- ifelse(
usable_tissues_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals2[is.na(keyvals2)] <- 'black'
names(keyvals2)[keyvals2 == 'red2'] <- 'Gene of Interest'
names(keyvals2)[keyvals2 == '#8B8B83'] <- 'Other'
usable_tissues_expression_volcano <- EnhancedVolcano(usable_tissues_expression ,
lab = usable_tissues_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals2,
pointSize = c(ifelse(usable_tissues_expression$Genes %in% soi_genes,8, 3.5)),
drawConnectors = TRUE,
widthConnectors = 0.2,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC)),
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))),
FCcutoff = 1,
labSize = 8.5,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free") +
theme(strip.text = element_text(size = 15))
png(paste0(loc, "DGEA_VOLCANO_10TSS.png"), width = 3040, height = 2060)
print(usable_tissues_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
tissues_of_interest <- c("BRCA", "HNSC", "LIHC", "LUSC")
tissues_of_interest_expression <- full_expression_table %>% filter(Tissue %in% tissues_of_interest)
keyvals3 <- ifelse(
tissues_of_interest_expression$Genes %in% soi_genes, 'red2','#8B8B83')
keyvals3[is.na(keyvals3)] <- 'black'
names(keyvals3)[keyvals3 == 'red2'] <- 'Gene of Interest'
names(keyvals3)[keyvals3 == '#8B8B83'] <- 'Other'
tissues_of_interest_expression_volcano <- EnhancedVolcano(tissues_of_interest_expression ,
lab = tissues_of_interest_expression$Genes,
x = "logFC",
y = "P.Value",
title = "TCGA Differential Gene Expression",
subtitle = " n>10 type Samples",
selectLab = soi_genes,
colCustom = keyvals3,
pointSize = c(ifelse(tissues_of_interest_expression$Genes %in% soi_genes, 8, 3.5)),
drawConnectors = TRUE,
widthConnectors = 0.25,
colAlpha = 0.65,
pCutoff = 0.01,
xlim = c(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))+0.2,
max(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(logFC))-0.2),
ylim = c(0,
-log10(min(usable_tissues_expression %>%
filter(Genes %in% soi_genes) %>%
pull(P.Value)))+2),
FCcutoff = 1,
labSize = 8.5,
max.overlaps = 25,
min.segment.length = 0.1) +
facet_wrap(~Tissue, scales = "free") +
theme(strip.text = element_text(size = 15))
png(paste0(loc, "DGEA_VOLCANO_4TSS.png"), width = 3840, height = 2160)
print(tissues_of_interest_expression_volcano)  # Print the plot to the PDF
dev.off()  # Close the PDF device
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(knitr)
library(tidyverse)
library(edgeR)
library(limma)
library(EnhancedVolcano)
library(ggrepel)
library(ggplot2)
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(strsplit(strings, "\\."), function(x) x[index])
return(element_list)
}
# RNAseq count data
count_data <- read.csv("Data/RNA_Data/TCGA_Norm/tcga_RSEM_Hugo_norm_count.csv")
# Metadata
tss_meta <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
abbrv_meta <- read.csv("Data/Other/TCGA_meta/bcrBatchCode.tsv", sep = "\t")
# Set of Interest
soi <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_mRNA_TPM_SOI.csv")
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(knitr)
library(tidyverse)
library(edgeR)
library(limma)
library(EnhancedVolcano)
library(ggrepel)
library(ggplot2)
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(strsplit(strings, "\\."), function(x) x[index])
return(element_list)
}
# RNAseq count data
count_data <- read.csv("Data/RNA_Data/TCGA_Norm/tcga_RSEM_Hugo_norm_count.csv")
# Metadata
tss_meta <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
abbrv_meta <- read.csv("Data/Other/TCGA_meta/bcrBatchCode.tsv", sep = "\t")
# Set of Interest
soi <- read.csv("Data/RNA_Data/TCGA_TPM/TCGA_mRNA_TPM_SOI.csv")
count_data_ordered <- count_data[,order(colnames(count_data))]
# Combine the metadata
meta <- left_join(tss_meta %>%
select(c("TSS.Code", "Study.Name")) %>%
distinct() %>%
sapply(trimws) %>%
as.data.frame(),
abbrv_meta %>%
select(c("Study.Abbreviation", "Study.Name")) %>%
distinct()%>%
sapply(trimws) %>%
as.data.frame(),
by = "Study.Name")
# Genes of Interest
goi <-soi[,2]
View(count_data)
View(count_data_ordered)
ids <- colnames(count_data_ordered)[-1]
participants <- extract_element(ids, 3)
condition <- extract_element(ids, 4)
tissue_type <- extract_element(ids, 2)
column_names <- c("Genes" ,  paste(tissue_type, participants, condition, sep = "."))
colnames(count_data_ordered) <- column_names
# Reset the row names to the Gene names
complete_counts <- count_data_ordered %>%
column_to_rownames(var = "Genes")
# Remove the unwanted sample types from the samples based on the code
codes_to_use <- c("01","02","03","04","05","08","09")
samples_to_use <- complete_counts %>%  select(ends_with(codes_to_use))
View(samples_to_use)
