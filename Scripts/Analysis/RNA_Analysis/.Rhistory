panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
plot.title.position = "plot"
)
Fried_test_data <- used_first %>%
gather(key = "Pairing", value = "Differential", starts_with("Mean_cntrl")) %>%
mutate(Sample = as.factor(Sample), Pairing = as.factor(Pairing)) %>%
select(Sample, Pairing, Differential)
friedman_result <- coin::friedman_test(Differential ~ Pairing | Sample, data = Fried_test_data)
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval))
}
View(Contrast_table)
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(broom)
library(knitr)
library(coin)
library(data.table)
library(ggpubr)
library(rstatix)
# library(ggplot2)
# library(paletteer)
# library(PairedData)
library(tidyverse)
# options(scipen = 1, digits = 20)
getOption("max.print")
random_rows <- sample(1:11060, 10)
first <- fread("Data/RNA_Data/Full_RNA_metrics1.csv")
used_first <- first[random_rows,c("Sample", "Mean_set", "Mean_cntrl","TSS","Hist_group", "TSS_Abbrvs")]
setnames(used_first, old = "Mean_cntrl", new = "Mean_cntrl1")
used_first[, Mean_diff1 := (Mean_set - Mean_cntrl1)]
num_datasets <- 412
# Loop over the datasets
for (i in 2:num_datasets) {
file_name <- paste("Data/RNA_Data/Full_RNA_metrics", i, ".csv", sep = "")
# Read the CSV file into a data.table
current_dataset <- fread(file_name)
current_dataset[, Mean_diff := (Mean_set - Mean_cntrl)]
new_name1 = paste('Mean_cntrl', i, sep = "")
new_name2 = paste('Mean_diff', i, sep = "")
rename_map <- c("Mean_cntrl" = new_name1, "Mean_diff" = new_name2)
# Rename columns in 'current_dataset' using the named vector
setnames(current_dataset, old = names(rename_map), new = rename_map)
# Select columns with their original names from 'current_dataset' and rename them
selected_columns <- current_dataset[random_rows, c("Sample", new_name1, new_name2), with = FALSE]
# Perform a merge based on Sample ID
used_first <- merge(used_first, selected_columns, by = "Sample", all = FALSE, suffixes = c("", i))
}
violin_graph_long_data <- used_first %>%
dplyr::select(sample(starts_with("Mean_dif"), 7)) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(violin_graph_long_data, aes(y = Value, x = Variable)) +
geom_violin(trim = FALSE)+
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "red")+
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across Various Pairings") +
theme(
legend.position = "none",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "#EDEDED"),
legend.text = element_blank(),
plot.title = element_text(hjust = 0.6, size = 15),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
plot.title.position = "plot"
)
Fried_test_data <- used_first %>%
gather(key = "Pairing", value = "Differential", starts_with("Mean_cntrl")) %>%
mutate(Sample = as.factor(Sample), Pairing = as.factor(Pairing)) %>%
select(Sample, Pairing, Differential)
friedman_result <- coin::friedman_test(Differential ~ Pairing | Sample, data = Fried_test_data)
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval))
}
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(broom)
library(knitr)
library(coin)
library(data.table)
library(ggpubr)
library(rstatix)
# library(ggplot2)
# library(paletteer)
# library(PairedData)
library(tidyverse)
# options(scipen = 1, digits = 20)
getOption("max.print")
random_rows <- sample(1:11060, 100)
first <- fread("Data/RNA_Data/Full_RNA_metrics1.csv")
used_first <- first[random_rows,c("Sample", "Mean_set", "Mean_cntrl","TSS","Hist_group", "TSS_Abbrvs")]
setnames(used_first, old = "Mean_cntrl", new = "Mean_cntrl1")
used_first[, Mean_diff1 := (Mean_set - Mean_cntrl1)]
num_datasets <- 412
# Loop over the datasets
for (i in 2:num_datasets) {
file_name <- paste("Data/RNA_Data/Full_RNA_metrics", i, ".csv", sep = "")
# Read the CSV file into a data.table
current_dataset <- fread(file_name)
current_dataset[, Mean_diff := (Mean_set - Mean_cntrl)]
new_name1 = paste('Mean_cntrl', i, sep = "")
new_name2 = paste('Mean_diff', i, sep = "")
rename_map <- c("Mean_cntrl" = new_name1, "Mean_diff" = new_name2)
# Rename columns in 'current_dataset' using the named vector
setnames(current_dataset, old = names(rename_map), new = rename_map)
# Select columns with their original names from 'current_dataset' and rename them
selected_columns <- current_dataset[random_rows, c("Sample", new_name1, new_name2), with = FALSE]
# Perform a merge based on Sample ID
used_first <- merge(used_first, selected_columns, by = "Sample", all = FALSE, suffixes = c("", i))
}
violin_graph_long_data <- used_first %>%
dplyr::select(sample(starts_with("Mean_dif"), 7)) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(violin_graph_long_data, aes(y = Value, x = Variable)) +
geom_violin(trim = FALSE)+
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "red")+
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across Various Pairings") +
theme(
legend.position = "none",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "#EDEDED"),
legend.text = element_blank(),
plot.title = element_text(hjust = 0.6, size = 15),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
plot.title.position = "plot"
)
Fried_test_data <- used_first %>%
gather(key = "Pairing", value = "Differential", starts_with("Mean_cntrl")) %>%
mutate(Sample = as.factor(Sample), Pairing = as.factor(Pairing)) %>%
select(Sample, Pairing, Differential)
friedman_result <- coin::friedman_test(Differential ~ Pairing | Sample, data = Fried_test_data)
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval))
}
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(0, 4)) +
scale_y_continuous() +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
plot.title = element_text(hjust = 0.6, size = 15),
plot.title.position = "plot",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.text = element_blank(),
legend.position = "none",
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.background = element_rect(fill = "#EDEDED")
)
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(broom)
library(knitr)
library(coin)
library(data.table)
library(ggpubr)
library(rstatix)
# library(ggplot2)
# library(paletteer)
# library(PairedData)
library(tidyverse)
# options(scipen = 1, digits = 20)
getOption("max.print")
random_rows <- sample(1:11060, 500)
first <- fread("Data/RNA_Data/Full_RNA_metrics1.csv")
used_first <- first[random_rows,c("Sample", "Mean_set", "Mean_cntrl","TSS","Hist_group", "TSS_Abbrvs")]
setnames(used_first, old = "Mean_cntrl", new = "Mean_cntrl1")
used_first[, Mean_diff1 := (Mean_set - Mean_cntrl1)]
num_datasets <- 412
# Loop over the datasets
for (i in 2:num_datasets) {
file_name <- paste("Data/RNA_Data/Full_RNA_metrics", i, ".csv", sep = "")
# Read the CSV file into a data.table
current_dataset <- fread(file_name)
current_dataset[, Mean_diff := (Mean_set - Mean_cntrl)]
new_name1 = paste('Mean_cntrl', i, sep = "")
new_name2 = paste('Mean_diff', i, sep = "")
rename_map <- c("Mean_cntrl" = new_name1, "Mean_diff" = new_name2)
# Rename columns in 'current_dataset' using the named vector
setnames(current_dataset, old = names(rename_map), new = rename_map)
# Select columns with their original names from 'current_dataset' and rename them
selected_columns <- current_dataset[random_rows, c("Sample", new_name1, new_name2), with = FALSE]
# Perform a merge based on Sample ID
used_first <- merge(used_first, selected_columns, by = "Sample", all = FALSE, suffixes = c("", i))
}
violin_graph_long_data <- used_first %>%
dplyr::select(sample(starts_with("Mean_dif"), 7)) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(violin_graph_long_data, aes(y = Value, x = Variable)) +
geom_violin(trim = FALSE)+
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "red")+
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across Various Pairings") +
theme(
legend.position = "none",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "#EDEDED"),
legend.text = element_blank(),
plot.title = element_text(hjust = 0.6, size = 15),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
plot.title.position = "plot"
)
Fried_test_data <- used_first %>%
gather(key = "Pairing", value = "Differential", starts_with("Mean_cntrl")) %>%
mutate(Sample = as.factor(Sample), Pairing = as.factor(Pairing)) %>%
select(Sample, Pairing, Differential)
friedman_result <- coin::friedman_test(Differential ~ Pairing | Sample, data = Fried_test_data)
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval))
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval)) %>% arrange(.by_group = Adj_P_Value)
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval)) %>% arrange(Contrast_table, .by_group = Adj_P_Value)
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- arrange(Contrast_table, .by_group = Adj_P_Value) %>% rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval))
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval))
Contrast_table <- arrange(Contrast_table, .by_group = Adj_P_Value)
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval))
Contrast_table <- arrange(Contrast_table, .Adj_P_Value)
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval))
Contrast_table <- arrange(Contrast_table, Adj_P_Value)
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval)) %>% arrange(Contrast_table, Adj_P_Value)
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval)) %>% arrange(Adj_P_Value)
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval)) %>% arrange(desc(Adj_P_Value))
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant = factor(0))
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant = category(0))
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant = character(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Significant <-
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval)) %>% arrange(desc(Adj_P_Value))
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant = character(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Significant <- if(Corrected_Pval<0.05) TRUE else FALSE)
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant = character(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Significant <- if(Corrected_Pval<0.05) "TRUE" else "FALSE")
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant = character(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Significant <- if(Corrected_Pval < 0.05) "TRUE" else "FALSE")
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant = character(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Significant <- if(Corrected_Pval < 0.05) "TRUE" else "FALSE"
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval)) %>% arrange(desc(Adj_P_Value))
}
Paired_wilc_table <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
mutate_all(as.numeric)
Contrast_table <- data.frame(Set = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant = character(0))
# Loop over each control sets
for (i in 1:num_datasets) {
set = paste('Mean_diff', i, sep = "")
Global_table <- Paired_wilc_table %>%
mutate(global = rowMeans(select(., -set), na.rm = TRUE)) %>%
select(set, global)
wlcx_paired_res = wilcox.test(Global_table[,get(set)], Global_table$global, paired = TRUE)
Corrected_Pval <- wlcx_paired_res$p.value * num_datasets
Significant_value <- if(Corrected_Pval < 0.05) "TRUE" else "FALSE"
Contrast_table <- rbind(Contrast_table, data.frame(Set = set, P_Value = wlcx_paired_res$p.value, Adj_P_Value = Corrected_Pval, Significant = Significant_value)) %>% arrange(desc(Adj_P_Value))
}
