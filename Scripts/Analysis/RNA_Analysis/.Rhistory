facet_wrap(~TSS_Abbrvs, ncol = 4, scales = "free_x", labeller = labeller(TSS_Abbrvs = function(label) label))  # Add scales = "free_x" and labeller
ggplot(main_data, aes(x = Sample, y = Mean_dif)) +
geom_col(alpha = 0.72, fill = "#00688B") +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential by Sample") +
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 14),
plot.title = element_text(hjust = 0.4, size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(linewidth = 0.35, linetype = "solid", colour = "black"),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1)) +
guides(fill = guide_legend(ncol = 8, title = "Source Tissue Type", title.position = "top")) +
facet_wrap(~TSS_Abbrvs, ncol = 4, scales = "free_x", labeller = labeller(TSS_Abbrvs = function(label) label))  # Add scales = "free_x" and labeller
ggplot(main_data, aes(x = Sample, y = Mean_dif)) +
geom_col(alpha = 0.72, fill = "#00688B") +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential by Sample") +
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 14),
plot.title = element_text(hjust = 0.6, size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(linewidth = 0.35, linetype = "solid", colour = "black"),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1)) +
guides(fill = guide_legend(ncol = 8, title = "Source Tissue Type", title.position = "top")) +
facet_wrap(~TSS_Abbrvs, ncol = 4, scales = "free_x", labeller = labeller(TSS_Abbrvs = function(label) label))  # Add scales = "free_x" and labeller
ggplot(main_data, aes(x = Sample, y = Mean_dif)) +
geom_col(alpha = 0.72, fill = "#00688B") +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential by Sample") +
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(linewidth = 0.35, linetype = "solid", colour = "black"),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1)) +
guides(fill = guide_legend(ncol = 8, title = "Source Tissue Type", title.position = "top")) +
facet_wrap(~TSS_Abbrvs, ncol = 4, scales = "free_x", labeller = labeller(TSS_Abbrvs = function(label) label))  # Add scales = "free_x" and labeller
ggplot(main_data, aes(x = Sample, y = Mean_dif)) +
geom_col(alpha = 0.72, fill = "#00688B") +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential by Sample") +
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 20),
plot.title = element_text(hjust = 0.5, size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(linewidth = 0.35, linetype = "solid", colour = "black"),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1)) +
guides(fill = guide_legend(ncol = 8, title = "Source Tissue Type", title.position = "top")) +
facet_wrap(~TSS_Abbrvs, ncol = 4, scales = "free_x", labeller = labeller(TSS_Abbrvs = function(label) label))
ggplot(main_data, aes(x = Sample, y = Mean_dif)) +
geom_col(alpha = 0.72, fill = "#00688B") +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential by Sample") +
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 155),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 15),
plot.title = element_text(hjust = 0.5, size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(linewidth = 0.35, linetype = "solid", colour = "black"),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
strip.text = element_text(size = 13)) +
guides(fill = guide_legend(ncol = 8, title = "Source Tissue Type", title.position = "top")) +
facet_wrap(~TSS_Abbrvs, ncol = 4, scales = "free_x", labeller = labeller(TSS_Abbrvs = function(label) label))
ggplot(main_data, aes(x = Sample, y = Mean_dif)) +
geom_col(alpha = 0.72, fill = "#00688B") +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential by Sample") +
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 15),
plot.title = element_text(hjust = 0.5, size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(linewidth = 0.35, linetype = "solid", colour = "black"),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
strip.text = element_text(size = 13)) +
guides(fill = guide_legend(ncol = 8, title = "Source Tissue Type", title.position = "top")) +
facet_wrap(~TSS_Abbrvs, ncol = 4, scales = "free_x", labeller = labeller(TSS_Abbrvs = function(label) label))
ggplot(main_data, aes(x = Sample, y = Mean_dif)) +
geom_col(alpha = 0.72, fill = "#00688B") +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential by Sample") +
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 11),
axis.title.x = element_blank(),
plot.title = element_text(hjust = 0.5, size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(linewidth = 0.35, linetype = "solid", colour = "black"),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
strip.text = element_text(size = 13)) +
guides(fill = guide_legend(ncol = 8, title = "Source Tissue Type", title.position = "top")) +
facet_wrap(~TSS_Abbrvs, ncol = 4, scales = "free_x", labeller = labeller(TSS_Abbrvs = function(label) label))
ggplot(main_data, aes(x = Sample, y = Mean_dif)) +
geom_col(alpha = 0.72, fill = "#00688B") +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential across Samples by TSS") +
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 11),
axis.title.x = element_blank(),
plot.title = element_text(hjust = 0.5, size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(linewidth = 0.35, linetype = "solid", colour = "black"),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
strip.text = element_text(size = 13)) +
guides(fill = guide_legend(ncol = 8, title = "Source Tissue Type", title.position = "top")) +
facet_wrap(~TSS_Abbrvs, ncol = 4, scales = "free_x", labeller = labeller(TSS_Abbrvs = function(label) label))
ggplot(main_data, aes(x = Sample, y = Mean_dif)) +
geom_col(alpha = 0.72, fill = "#00688B") +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential across Samples by TSS") +
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 11),
axis.title.x = element_blank(),
plot.title = element_text(hjust = 0.5, size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(linewidth = 0.35, linetype = "solid", colour = "black"),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
strip.text = element_text(size = 13)) +
guides(fill = guide_legend(ncol = 8, title = "Source Tissue Type", title.position = "top")) +
facet_wrap(~TSS, ncol = 4, scales = "free_x", labeller = labeller(TSS = function(label) label))
# Get unique values of 'TSS' for grouping
unique_TSS <- unique(main_data$TSS)
# Initialize a df to store the test results
Results_table <- data.frame(TSS = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant_value= character(0), Mean_diff = numeric(0))
# Loop through each unique value of 'TSS'
for (i in 1:length(unique_TSS)) {
current_TSS <- unique_TSS[i]
# Subset the data for the current group
subset_data <- main_data[main_data$TSS == current_TSS, ]
# Perform the paired permutation test for the current group
test_result <- perm.test(subset_data$Mean_set, subset_data$Mean_cntrl,
alternative = "two.sided", mu = 0, paired = TRUE,
all.perms = TRUE, num.sim = 10000, plot = FALSE, stat = mean)
# Correct the p_value using the Benjamini Hochberg correction method
Corrected_Pval <- p.adjust(test_result$p.value, method = "BH", n = length(unique_TSS))
Significant_val <- if(Corrected_Pval < 0.05) "TRUE" else "FALSE"
# Calculate the mean Expression value per group
mean_diff <- mean(subset_data$Mean_dif)
# Store the result in  'Results_table'
Results_table <- rbind(Results_table, data.frame(TSS = current_TSS, P_Value = test_result$p.value, Adj_P_Value = Corrected_Pval,
Significant_value  = Significant_val, Mean_diff = mean_diff)) %>% arrange(desc(Mean_diff))
}
ggplot(Results_table, aes(x = TSS, y = Mean_diff, fill = TSS)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Comparative Analysis of Average Differential Expression in Set-of-Interest vs Control Set",
x = "Average Differential Log2 Expression",
y = "Adjusted P-Value (-log10)") +
theme(legend.position = "bottom",
legend.text = element_text(size= 9),
axis.title = element_text(size = 14),
legend.title =element_text(hjust = 0.5,
size = 10),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS, y = Mean_diff, fill = TSS)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Comparative Analysis of Average Differential Expression in Set-of-Interest vs Control Set",
y = "Average Differential Log2 Expression")+
theme(legend.position = "bottom",
legend.text = element_text(size= 9),
axis.title = element_text(size = 14),
legend.title =element_text(hjust = 0.5,
size = 10),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Comparative Analysis of Average Differential Expression in Set-of-Interest vs Control Set",
y = "Average Differential Log2 Expression")+
theme(legend.position = "bottom",
legend.text = element_text(size= 9),
axis.title = element_text(size = 14),
legend.title =element_text(hjust = 0.5,
size = 10),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS_Abbrvs, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Comparative Analysis of Average Differential Expression in Set-of-Interest vs Control Set",
y = "Average Differential Log2 Expression")+
theme(legend.position = "bottom",
legend.text = element_text(size= 9),
axis.title = element_text(size = 14),
legend.title =element_text(hjust = 0.5,
size = 10),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
# Get unique values of 'TSS' for grouping
unique_TSS <- unique(main_data$TSS_Abbrvs)
# Initialize a df to store the test results
Results_table <- data.frame(TSS = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant_value= character(0), Mean_diff = numeric(0))
# Loop through each unique value of 'TSS'
for (i in 1:length(unique_TSS)) {
current_TSS <- unique_TSS[i]
# Subset the data for the current group
subset_data <- main_data[main_data$TSS == current_TSS, ]
# Perform the paired permutation test for the current group
test_result <- perm.test(subset_data$Mean_set, subset_data$Mean_cntrl,
alternative = "two.sided", mu = 0, paired = TRUE,
all.perms = TRUE, num.sim = 10000, plot = FALSE, stat = mean)
# Correct the p_value using the Benjamini Hochberg correction method
Corrected_Pval <- p.adjust(test_result$p.value, method = "BH", n = length(unique_TSS))
Significant_val <- if(Corrected_Pval < 0.05) "TRUE" else "FALSE"
# Calculate the mean Expression value per group
mean_diff <- mean(subset_data$Mean_dif)
# Store the result in  'Results_table'
Results_table <- rbind(Results_table, data.frame(TSS = current_TSS, P_Value = test_result$p.value, Adj_P_Value = Corrected_Pval,
Significant_value  = Significant_val, Mean_diff = mean_diff)) %>% arrange(desc(Mean_diff))
}
# Get unique values of 'TSS' for grouping
unique_TSS <- unique(main_data$TSS_Abbrvs)
# Initialize a df to store the test results
Results_table <- data.frame(TSS = character(0), P_Value = numeric(0), Adj_P_Value = numeric(0), Significant_value= character(0), Mean_diff = numeric(0))
# Loop through each unique value of 'TSS'
for (i in 1:length(unique_TSS)) {
current_TSS <- unique_TSS[i]
# Subset the data for the current group
subset_data <- main_data[main_data$TSS_Abbrvs == current_TSS, ]
# Perform the paired permutation test for the current group
test_result <- perm.test(subset_data$Mean_set, subset_data$Mean_cntrl,
alternative = "two.sided", mu = 0, paired = TRUE,
all.perms = TRUE, num.sim = 10000, plot = FALSE, stat = mean)
# Correct the p_value using the Benjamini Hochberg correction method
Corrected_Pval <- p.adjust(test_result$p.value, method = "BH", n = length(unique_TSS))
Significant_val <- if(Corrected_Pval < 0.05) "TRUE" else "FALSE"
# Calculate the mean Expression value per group
mean_diff <- mean(subset_data$Mean_dif)
# Store the result in  'Results_table'
Results_table <- rbind(Results_table, data.frame(TSS = current_TSS, P_Value = test_result$p.value, Adj_P_Value = Corrected_Pval,
Significant_value  = Significant_val, Mean_diff = mean_diff)) %>% arrange(desc(Mean_diff))
}
ggplot(Results_table, aes(x = TSS, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Comparative Analysis of Average Differential Expression in Set-of-Interest vs Control Set",
y = "Average Differential Log2 Expression")+
theme(legend.position = "bottom",
legend.text = element_text(size= 9),
axis.title = element_text(size = 14),
legend.title =element_text(hjust = 0.5,
size = 10),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Comparative Analysis of Average Differential Expression in Set-of-Interest vs Control Set",
y = "Average Differential Log2 Expression")+
theme(
axis.title = element_text(size = 14),
axis.text.x = element_text(angle = 90),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Comparative Analysis of Average Differential Expression in Set-of-Interest vs Control Set",
y = "Average Differential Log2 Expression")+
theme(
axis.title = element_text(size = 14),
axis.text.x = element_text(angle = 80),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Comparative Analysis of Average Differential Expression in Set-of-Interest vs Control Set",
y = "Average Differential Log2 Expression")+
theme(
axis.title = element_text(size = 14),
axis.text.x = element_text(angle = 80),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Comparative Analysis of Average Differential Expression in Set-of-Interest vs Control Set",
y = "Average Differential Log2 Expression")+
theme(
axis.title = element_text(size = 14),
axis.text.x = element_text(angle = 90),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Average Differential Expression in Set-of-Interest vs Control Set",
y = "Average Differential Log2 Expression")+
theme(
axis.title = element_text(size = 14),
axis.text.x = element_text(angle = 90),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Average Differential Expression in Set-of-Interest vs Control Set",
y = "Mean Differential Log2 Expression")+
theme(
axis.title = element_text(size = 14),
axis.text.x = element_text(angle = 90),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(Results_table, aes(x = TSS, y = Mean_diff)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Average Differential Expression in Set-of-Interest vs Control Set",
y = "Mean Differential Log2 Expression")+
theme(
axis.title = element_text(size = 13),
axis.text.x = element_text(angle = 90),
plot.title = element_text(hjust = 0.5,
size = 16),
panel.grid.major = element_line(color = "black",
linewidth = 0.5,
linetype = 1),
panel.grid.minor = element_line(color = "black",
linewidth = 0.2,
linetype = 1),
panel.background = element_rect(fill = "#EDEDED"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
