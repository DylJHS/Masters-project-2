)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(-1, 5)) +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across Various Pairings") +
theme(
legend.position = "none",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.Ticks = element_blank(),
panel.background = element_rect(fill = "#EDEDED"),
legend.text = element_blank(),
plot.title = element_text(hjust = 0.6, size = 15),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
plot.title.position = "plot"
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(-1, 5)) +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across Various Pairings") +
theme(
legend.position = "none",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.background = element_rect(fill = "#EDEDED"),
legend.text = element_blank(),
plot.title = element_text(hjust = 0.6, size = 15),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
plot.title.position = "plot"
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(-1, 5)) +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across Various Pairings") +
theme(
legend.position = "none",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.background = element_rect(fill = "#EDEDED"),
legend.text = element_blank(),
plot.title = element_text(hjust = 0.6, size = 15),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
plot.title.position = "plot"
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(-1, 5)) +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
legend.position = "none",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.background = element_rect(fill = "#EDEDED"),
legend.text = element_blank(),
plot.title = element_text(hjust = 0.6, size = 15),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
plot.title.position = "plot"
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(-1, 5)) +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
plot.title = element_text(hjust = 0.6, size = 15),
plot.title.position = "plot",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.text = element_blank(),
legend.position = "none",
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.background = element_rect(fill = "#EDEDED"),
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(-1, 5)) +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
plot.title = element_text(hjust = 0.6, size = 15),
plot.title.position = "plot",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.text = element_blank(),
legend.position = "none",
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.background = element_rect(fill = "#EDEDED")
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
scale_y_continuous() +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
plot.title = element_text(hjust = 0.6, size = 15),
plot.title.position = "plot",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.text = element_blank(),
legend.position = "none",
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.background = element_rect(fill = "#EDEDED")
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(-1, 5)) +
scale_y_continuous() +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
plot.title = element_text(hjust = 0.6, size = 15),
plot.title.position = "plot",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.text = element_blank(),
legend.position = "none",
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.background = element_rect(fill = "#EDEDED")
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(-5, 5)) +
scale_y_continuous() +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
plot.title = element_text(hjust = 0.6, size = 15),
plot.title.position = "plot",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.text = element_blank(),
legend.position = "none",
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.background = element_rect(fill = "#EDEDED")
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(0, 5)) +
scale_y_continuous() +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
plot.title = element_text(hjust = 0.6, size = 15),
plot.title.position = "plot",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.text = element_blank(),
legend.position = "none",
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.background = element_rect(fill = "#EDEDED")
)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(0, 4)) +
scale_y_continuous() +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
plot.title = element_text(hjust = 0.6, size = 15),
plot.title.position = "plot",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.text = element_blank(),
legend.position = "none",
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.background = element_rect(fill = "#EDEDED")
)
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(broom)
library(knitr)
library(coin)
library(data.table)
library(ggpubr)
library(rstatix)
# library(ggplot2)
# library(paletteer)
# library(PairedData)
library(tidyverse)
# options(scipen = 1, digits = 20)
getOption("max.print")
row_numbers <- 500
first <- fread("Data/RNA_Data/Full_RNA_metrics1.csv", nrows = row_numbers)
used_first <- first[,c("Sample", "Mean_set", "Mean_cntrl","TSS","Hist_group", "TSS_Abbrvs")]
setnames(used_first, old = "Mean_cntrl", new = "Mean_cntrl1")
used_first[, Mean_diff1 := (Mean_set - Mean_cntrl1)]
num_datasets <- 412
# Loop over the datasets
for (i in 2:num_datasets) {
file_name <- paste("Data/RNA_Data/Full_RNA_metrics", i, ".csv", sep = "")
# Read the CSV file into a data.table
current_dataset <- fread(file_name, nrows = row_numbers)
current_dataset[, Mean_diff := (Mean_set - Mean_cntrl)]
new_name1 = paste('Mean_cntrl', i, sep = "")
new_name2 = paste('Mean_diff', i, sep = "")
rename_map <- c("Mean_cntrl" = new_name1, "Mean_diff" = new_name2)
# Rename columns in 'current_dataset' using the named vector
setnames(current_dataset, old = names(rename_map), new = rename_map)
# Select columns with their original names from 'current_dataset' and rename them
selected_columns <- current_dataset[, c("Sample", new_name1, new_name2), with = FALSE]
# Perform a merge based on Sample ID
used_first <- merge(used_first, selected_columns, by = "Sample", all = FALSE, suffixes = c("", i))
}
violin_graph_long_data <- used_first %>%
dplyr::select(sample(starts_with("Mean_diff"), 7)) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(violin_graph_long_data, aes(y = Value, x = Variable)) +
geom_violin(trim = FALSE)+
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "red")+
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across Various Pairings") +
theme(
legend.position = "none",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "#EDEDED"),
legend.text = element_blank(),
plot.title = element_text(hjust = 0.6, size = 15),
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
plot.title.position = "plot"
)
Fried_test_data <- used_first %>%
gather(key = "Pairing", value = "Differential", starts_with("Mean_diff")) %>%
mutate(Sample = as.factor(Sample), Pairing = as.factor(Pairing)) %>%
select(Sample, Pairing, Differential)
friedman_result <- coin::friedman_test(Differential ~ Pairing | Sample, data = Fried_test_data)
# posthoc_result <- PMCMRplus::frdAllPairsNemenyiTest(Differential ~ Pairing | Sample, data = Fried_test_data)
graph_long_data <- used_first %>%
dplyr::select(starts_with("Mean_diff")) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(graph_long_data, aes(y = Value, x = Variable)) +
geom_boxplot(varwidth = T, alpha  = 0.25, outlier.colour = "#EDEDED")+
coord_cartesian(ylim = c(0, 4)) +
scale_y_continuous() +
labs(x = "Unique SoI / Control Pairings ", y = "Δ Log2 Expression",
title = "Distribution of the Set-of-Interest to Control Set \n Differential Log2 Expression Across All Pairings") +
theme(
plot.title = element_text(hjust = 0.6, size = 15),
plot.title.position = "plot",
axis.title = element_text(size = 13, color = "black", face = "bold"),
axis.text = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.text = element_blank(),
legend.position = "none",
panel.border = element_rect(fill = "transparent", color = 1, linewidth = 1),
panel.grid.major.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_line(color = "black", linewidth = 0.1, linetype = 2),
panel.background = element_rect(fill = "#EDEDED")
)
# Loop over each of the control datasets in the folder.
# For each control-set perform a Two-Sample wilcoxon Signed-Rank test.
# Save the pvalue for each test in a dataframe.
paired_tests_list <- list()
for (i in 1:num_datasets) {
ctrl <- paste("Mean_cntrl", i, sep ="")
wlcx_paired_res = wilcox.test(used_first$Mean_set, used_first[,get(ctrl)], paired = TRUE)
wlcx_paired_res_pval <- wlcx_paired_res$p.value
formatted_pval <- sprintf("%.10f", wlcx_paired_res_pval)
pair <- paste("Pair", i, sep ="_")
pair_frame = data.frame(Pairing = pair, Pvalue = as.numeric(formatted_pval))
paired_tests_list[[i]] <- pair_frame
}
# Correct the P-value due to multiple testing by using the Bonferoni method (more stringent than BH).
full_paired = do.call(rbind, paired_tests_list)
full_paired$Corrected_Pval <- full_paired$Pvalue * num_datasets
# Select 3 control sets at random to compare their distributions with that of the SoI.
controls <- c("Mean_set")
for (i in sample(1:num_datasets, 3)) {
controls <- c(controls, paste("Mean_cntrl", i, sep =""))
}
# Pivot the data into a form that can be used by boxplot.
long_data <- used_first %>%
dplyr::select(all_of(controls)) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(long_data, aes( y = Value, x = Variable)) +
geom_boxplot(outlier.colour = 2) +
stat_boxplot(geom = "errorbar") +
theme_minimal() +
labs(title = "Distribution of the Mean Copy Number in the Set-of-Interest vs the Control-Set",
y = "Log2 Expression") +
# scale_x_discrete(label = c("Control Set", "Set of Interest")) +
# scale_fill_hue(labels = c("Control Set", "Set of Interest"))+
theme(
legend.position = "None",
axis.title.y = element_text(size= 13),
plot.subtitle = element_text(hjust= 0.5),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 11),
plot.title = element_text(hjust = 0.5,
size = 14),
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.25, linetype = 2),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
# Loop over each of the control datasets in the folder.
# For each control-set perform a Two-Sample wilcoxon Signed-Rank test.
# Save the pvalue for each test in a dataframe.
paired_tests_list <- list()
for (i in 1:num_datasets) {
ctrl <- paste("Mean_cntrl", i, sep ="")
wlcx_paired_res = wilcox.test(used_first$Mean_set, used_first[,get(ctrl)], paired = TRUE)
wlcx_paired_res_pval <- wlcx_paired_res$p.value
formatted_pval <- sprintf("%.10f", wlcx_paired_res_pval)
pair <- paste("Pair", i, sep ="_")
pair_frame = data.frame(Pairing = pair, Pvalue = as.numeric(formatted_pval))
paired_tests_list[[i]] <- pair_frame
}
# Correct the P-value due to multiple testing by using the Bonferoni method (more stringent than BH).
full_paired = do.call(rbind, paired_tests_list)
full_paired$Corrected_Pval <- full_paired$Pvalue * num_datasets
# Select 3 control sets at random to compare their distributions with that of the SoI.
controls <- c("Mean_set")
for (i in sample(1:num_datasets, 3)) {
controls <- c(controls, paste("Mean_cntrl", i, sep =""))
}
# Pivot the data into a form that can be used by boxplot.
long_data <- used_first %>%
dplyr::select(all_of(controls)) %>%
pivot_longer(cols = everything(),
names_to = "Variable",
values_to = "Value")
ggplot(long_data, aes( y = Value, x = Variable)) +
geom_boxplot(outlier.colour = 2) +
stat_boxplot(geom = "errorbar") +
theme_minimal() +
labs(title = "Distribution of the Mean Copy Number in the Set-of-Interest vs the Control-Set",
y = "Log2 Expression") +
# scale_x_discrete(label = c("Control Set", "Set of Interest")) +
# scale_fill_hue(labels = c("Control Set", "Set of Interest"))+
theme(
legend.position = "None",
axis.title.y = element_text(size= 13),
plot.subtitle = element_text(hjust= 0.5),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 11),
plot.title = element_text(hjust = 0.5,
size = 14),
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", linewidth = 0.25, linetype = 2),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 2))
ggplot(order_data, aes(x = Sample, y = Mean_diff, fill = TSS)) +
geom_col() +
theme_minimal() +
labs(y = "Δ Mean Log2 Expression",
x = "Samples",
title = "Expression Differential by Sample ")+
scale_y_continuous(breaks = c(0, 1, 2, 3))+
theme(
axis.text.x = element_blank(),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 14),
legend.position = "right",
legend.text = element_text(size= 11),
legend.title =element_text(hjust = 0.5,
size = 13),
plot.title = element_text(hjust = 0.4,
size = 18),
plot.title.position = "plot",
panel.background = element_rect(fill = "#EDEDED"),
panel.grid.major.y = element_line(color = "black", size = 0.5, linetype = 2),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
axis.line = element_line(size = 0.35, linetype = "solid",
colour = "black"),
panel.border = element_rect(fill = "transparent",
color = 1,
linewidth = 1)) +
guides(fill = guide_legend(ncol = 1,
title = "Source Tissue Type",
title.position = "top"))
