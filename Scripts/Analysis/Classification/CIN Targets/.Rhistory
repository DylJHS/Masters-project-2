}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
View(seg_sub)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = sum(value * overlap_proportion) / sum(overlap_proportion)
# .groups = 'drop'  # This option removes the grouping structure after summarisation
) %>%
select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = sum(value * overlap_proportion) / sum(overlap_proportion),
.groups = 'drop'  # This option removes the grouping structure after summarisation
) %>%
select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion)3),
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),3),
.groups = 'drop'  # This option removes the grouping structure after summarisation
) %>%
select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
.groups = 'drop'  # This option removes the grouping structure after summarisation
) %>%
select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
.groups = 'drop'  # This option removes the grouping structure after summarisation
) %>%
select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
View(cnv_reformat)
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(textshape)
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(stringr::str_split(strings, "\\-"),
function(x) x[index])
return(element_list)
}
ori_hrd <- read_tsv("Data/CIN_Features/TCGA.HRD_withSampleID.txt")
ori_arm_cnv <- read_tsv("Data/CIN_Features/CNV_Data/PANCAN_ArmCallsAndAneuploidyScore_092817.txt")
peri_cnv <- read.csv("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv")
# Metadata
tss_meta <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
abbrv_meta <- read.csv("Data/Other/TCGA_meta/bcrBatchCode.tsv", sep = "\t")
# Combine the metadata
meta <- left_join(tss_meta %>%
dplyr::select(c("TSS.Code", "Study.Name")) %>%
distinct() %>%
sapply(trimws) %>%
as.data.frame(),
abbrv_meta %>%
dplyr::select(c("Study.Abbreviation", "Study.Name")) %>%
distinct()%>%
sapply(trimws) %>%
as.data.frame(),
by = "Study.Name")
t_hrd <- as.data.frame(t(ori_hrd))
first_hrd <- t_hrd
colnames(first_hrd) <- t_hrd[1, ]
hrd <- as.data.frame(first_hrd[-1,])
# Replace the NAs with 0
cvn_arm <- ori_arm_cnv %>% replace(is.na(.), 0)
# Re-organise the columns
cnvs_arm <- cvn_arm %>%
column_to_rownames("Sample") %>%
dplyr::select(-"Type")
full_cin <- merge(
hrd,
cnvs_arm,
by = "row.names"
)
full_cin <- merge(
full_cin,
peri_cnv,
by.x = "Row.names",
by.y = "sampleID"
)
View(full_cin)
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(rtracklayer)
library(tidyverse)
ori_segmnt_cnv <- read_tsv("Data/CIN_Features/CNV_Data/Chrom_seg_CNV.txt")
all_segs <- import("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Raw_Data/Other/censat.bb") %>% as.data.frame()
# from the T2T data select the ranges for the annotations of satellites that correspond to pericentromeric sats
cgbh_segs <- all_segs %>%
filter((grepl("hsat", name)) |
(grepl("gsat", name)) |
(grepl("bsat", name)) |
(grepl("ct", name)) |
(grepl("censat", name))) %>%
select(c("seqnames","start", "end", "width", "name")) %>%
arrange(seqnames, start)
# Combine the adjacent ranges
comb_cgbh <- cgbh_segs %>%
group_by(seqnames) %>%
arrange(start) %>%
mutate(end_next = lead(start),
combined = ifelse(end == end_next & !is.na(end_next), TRUE, FALSE),
combined_group = 0) %>%
select(-"end_next") %>%
arrange(seqnames, start )
cgbh_subset <- comb_cgbh %>%
group_by(seqnames) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
ungroup()
for (i in 2:nrow(cgbh_subset)) {
cgbh_subset$combined_group[i] <- ifelse(
cgbh_subset$combined[i - 1],
cgbh_subset$combined_group[i - 1],
cgbh_subset$combined_group[i - 1] + 1
)
}
# Ensuring that the resulting combined regions start and end with HSat regions
adj_cgbh <- cgbh_subset %>%
group_by(seqnames, combined_group) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
summarise(start_bp = dplyr::first(start),
end_bp = last(end),
width_bp = sum(width),
name = paste(name, collapse = ", ")) %>%
select(-c("combined_group"))
final_cgbh <- adj_cgbh %>%
group_by(seqnames) %>%
filter((width_bp == max(width_bp)) | (width_bp >= 1000000)) %>%
mutate(
peri_id = case_when(
n() > 1 ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))), "_", row_number()),
TRUE ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))))),
seqnames = substring(as.character(seqnames), 4, nchar(as.character(seqnames)))
) %>%
rename(seqnames = "chromosome") %>%
select(peri_id,chromosome, everything())
print(final_cgbh)
# write.csv(final_cgbh,"/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/Other/pericentro_meta.csv", row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
.groups = 'drop'  # This option removes the grouping structure after summarisation
) %>%
select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
print(describe(cnv_reformat))
print(describe(cnv_reformat))
print(describe(full_cin))
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(textshape)
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(stringr::str_split(strings, "\\-"),
function(x) x[index])
return(element_list)
}
ori_hrd <- read_tsv("Data/CIN_Features/TCGA.HRD_withSampleID.txt")
ori_arm_cnv <- read_tsv("Data/CIN_Features/CNV_Data/PANCAN_ArmCallsAndAneuploidyScore_092817.txt")
peri_cnv <- read.csv("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv")
# Metadata
tss_meta <- read.csv("Data/Other/TCGA_meta/tissueSourceSite.tsv", sep = "\t")
abbrv_meta <- read.csv("Data/Other/TCGA_meta/bcrBatchCode.tsv", sep = "\t")
# Combine the metadata
meta <- left_join(tss_meta %>%
dplyr::select(c("TSS.Code", "Study.Name")) %>%
distinct() %>%
sapply(trimws) %>%
as.data.frame(),
abbrv_meta %>%
dplyr::select(c("Study.Abbreviation", "Study.Name")) %>%
distinct()%>%
sapply(trimws) %>%
as.data.frame(),
by = "Study.Name")
t_hrd <- as.data.frame(t(ori_hrd))
first_hrd <- t_hrd
colnames(first_hrd) <- t_hrd[1, ]
hrd <- as.data.frame(first_hrd[-1,])
# Replace the NAs with 0
cvn_arm <- ori_arm_cnv %>% replace(is.na(.), 0)
# Re-organise the columns
cnvs_arm <- cvn_arm %>%
column_to_rownames("Sample") %>%
dplyr::select(-"Type")
full_cin <- merge(
hrd,
cnvs_arm,
by = "row.names"
)
full_cin <- merge(
full_cin,
peri_cnv,
by.x = "Row.names",
by.y = "sampleID"
)
print(describe(full_cin))
desc <- describe(full_cin)
View(desc)
full_cin <- merge(
hrd,
cnvs_arm,
by = "row.names"
)
full_cin <- merge(
full_cin,
peri_cnv,
by.x = "Row.names",
by.y = "sampleID"
) %>%
column_to_rownames("Row.names"
)
desc <- describe(full_cin)
ori_segmnt_cnv <- read_tsv("Data/CIN_Features/CNV_Data/Chrom_seg_CNV.txt")
all_segs <- import("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Raw_Data/Other/censat.bb") %>% as.data.frame()
View(ori_segmnt_cnv)
desc <- describe(full_cin)
peri_desc <-describe(peri_cnv)
View(peri_desc)
View(cnvs_arm)
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(mltools)
library(knitr)
library(tidyverse)
library(data.table)
library(ggpubr)
library(psych)
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(stringr::str_split(strings, "\\-"),
function(x) x[index])
return(element_list)
}
ori_segmnt_cnv <- read_tsv("Data/CIN_Features/CNV_Data/Chrom_seg_CNV.txt")
ori_arm_cnv <- read_tsv("Data/CIN_Features/CNV_Data/PANCAN_ArmCallsAndAneuploidyScore_092817.txt")
peri_cnv <- read.csv("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv")
# Replace the NAs with 0
cvn_arm <- ori_arm_cnv %>% replace(is.na(.), 0)
# Re-organise the columns
cnvs_arm <- cvn_arm %>%
column_to_rownames("Sample") %>%
select(-c("Type", "Aneuploidy Score"))
View(cnvs_arm)
View(cnvs_arm)
View(peri_cnv)
ori_segmnt_cnv <- read_tsv("Data/CIN_Features/CNV_Data/Chrom_seg_CNV.txt")
ori_arm_cnv <- read_tsv("Data/CIN_Features/CNV_Data/PANCAN_ArmCallsAndAneuploidyScore_092817.txt")
peri_cnv <- read.csv("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv") %>%
column_to_rownames("SampleID")
ori_segmnt_cnv <- read_tsv("Data/CIN_Features/CNV_Data/Chrom_seg_CNV.txt")
ori_arm_cnv <- read_tsv("Data/CIN_Features/CNV_Data/PANCAN_ArmCallsAndAneuploidyScore_092817.txt")
peri_cnv <- read.csv("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv") %>%
column_to_rownames("sampleID")
ori_segmnt_cnv <- read_tsv("Data/CIN_Features/CNV_Data/Chrom_seg_CNV.txt")
ori_arm_cnv <- read_tsv("Data/CIN_Features/CNV_Data/PANCAN_ArmCallsAndAneuploidyScore_092817.txt")
peri_cnv <- read.csv("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv") %>%
column_to_rownames("sampleID")
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(mltools)
library(knitr)
library(tidyverse)
library(data.table)
library(ggpubr)
library(psych)
extract_element <- function(strings, index) {
# Split each string by "." and extract the third element
element_list <- sapply(stringr::str_split(strings, "\\-"),
function(x) x[index])
return(element_list)
}
ori_segmnt_cnv <- read_tsv("Data/CIN_Features/CNV_Data/Chrom_seg_CNV.txt")
ori_arm_cnv <- read_tsv("Data/CIN_Features/CNV_Data/PANCAN_ArmCallsAndAneuploidyScore_092817.txt")
peri_cnv <- read.csv("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv") %>%
column_to_rownames("sampleID")
dist <- dist(peri_cnv)
dist_matrix <- as.matrix(dist)
# Produce the MDS object.
mds <- cmdscale(dist)
# Convert the MDS object to a dataframe with additional features
mds_df <- as.data.frame(mds) %>%
dplyr::mutate(cancer_type = extract_element(rownames(peri_cnv), 2),
sample_type = extract_element(rownames(peri_cnv), 4),
synergy_type = paste(cancer_type, sample_type, sep = "-"))
# Create the plots of the MDS.
sample_mds <- ggpubr::ggscatter(mds_df, x = "V1", y = "V2",
color = "sample_type", # Colour based on the sample type
size = 1,
repel = TRUE
)
cancer_mds <- ggpubr::ggscatter(mds_df, x = "V1", y = "V2",
color = "cancer_type", # Colour based on the cancer type
size = 1,
repel = TRUE) + theme(legend.position = "none")
synergy_mds <- ggpubr::ggscatter(mds_df, x = "V1", y = "V2",
color = "cancer_type", # Colour based on the synergy between the cancer and sample type
shape = "sample_type",
size = 1,
repel = TRUE) +
theme(legend.position = "none")
# coord_cartesian(xlim = c(-35, 20),
#                 ylim = c(-25,25))
sample_mds
cancer_mds
synergy_mds
synergy_mds
cancer_mds
