desc_aneu
desc_aneu <- hist(cnvs_arm)
install.packages("Hmisc")
library(ggpubr)
library(dplyr)
library(mltools)
library(Hmisc)
library(tidyverse)
library(data.table)
library(ggpubr)
desc_aneu <- hist.data.frame(cnvs_arm)
desc_aneu <- hist.data.frame(cnvs_arm[,1:10])
desc_aneu <- hist.data.frame(cnvs_arm[,1:5])
desc_aneu
desc_aneu <- table(cnvs_arm$1p)
desc_aneu <- table(cnvs_arm[["1p"]])
desc_aneu
desc_aneu <- table(cnvs_arm[,1:3)
desc_aneu <- table(cnvs_arm[,1:3]
desc_aneu
desc_aneu <- table(cnvs_arm[,1:3])
desc_aneu
for (i in cnvs_arm){
table(cnvs_arm[[i]])
}
for (i in cnvs_arm){
print(i)
table(cnvs_arm[[i]])
}
for (i in colnames(cnvs_arm)){
print(i)
table(cnvs_arm[[i]])
}
for (i in colnames(cnvs_arm)){
table(cnvs_arm[[i]])
}
for (i in colnames(cnvs_arm)){
table <- table(cnvs_arm[[i]])
table
}
for (i in colnames(cnvs_arm)){
table <- table(cnvs_arm$i)
table
}
for (i in colnames(cnvs_arm)){
table <- table(cnvs_arm$i)
print(table)
}
table(cnvs_arm[["1p"]])
d <- table(cnvs_arm[["1p"]])
d <- table(cnvs_arm[["1p"]])
d
d <- as.dataframe(table(cnvs_arm[["1p"]]))
d <- as.data.frame(table(cnvs_arm[["1p"]]))
d
View(d)
d <- data.frame()
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]]))
d <- merge(d, d, by = "Var1")
}
d
d <- data.frame()
for (i in colnames(cnvs_arm)){
print(k)
d <- as.data.frame(table(cnvs_arm[[i]]))
d <- merge(d, d, by = "Var1")
}
d <- data.frame()
for (i in colnames(cnvs_arm)){
print(i)
d <- as.data.frame(table(cnvs_arm[[i]]))
d <- merge(d, d, by = "Var1")
}
d
d <- data.frame()
for (i in colnames(cnvs_arm)){
print(i)
d <- as.data.frame(table(cnvs_arm[[i]]))
print(d)
d <- merge(d, d, by = "Var1")
}
d
d <- data.frame()
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]]))
print(d)
d <- merge(d, d, by = "Var1")
}
d
old <- data.frame()
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]]))
print(d)
old <- merge(d, d, by = "Var1")
}
old
old <- data.frame()
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]]))
print(d)
old <- merge(old, d, by = "Var1")
}
old <- data.frame(Var1 = numeric(),
Freq = numeric())
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]]))
print(d)
old <- merge(old, d, by = "Var1")
}
old
View(old)
old <- data.frame(Var1)
old <- data.frame(Var1,
Freq = numeric())
old <- data.frame(Var1 = numeric())
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]]))
print(d)
old <- merge(old, d, by = "Var1")
}
old
View(old)
old <- data.frame(Var1 = [-1,0,1])
old <- data.frame(Var1 = c(-1,0,1)
for (i in colnames(cnvs_arm)){
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]]))
print(d)
old <- merge(old, d, by = "Var1")
}
old
View(old)
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename(i = "freq")
print(d)
old <- merge(old, d, by = "Var1")
}
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]]))
print(d)
old <- merge(old, d, by = "Var1")
}
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename(i = "Freq")
print(d)
old <- merge(old, d, by = "Var1")
}
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename(assign(i) = "Freq")
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i = "Freq")
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
print(d)
old <- merge(old, d, by = "Var1")
}
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
old
old <- data.frame(-1 = numeric(),
old <- data.frame("-1" = numeric(),
"0" = numeric(),
"1" = numeric()
)
# for (i in colnames(cnvs_arm)){
#   d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
#   old <- merge(old, d, by = "Var1")
# }
old
old <- data.frame("-1" = numeric(),
"0" = numeric(),
"1" = numeric()
)
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq") %>% t()
d
# old <- merge(old, d, by = "Var1")
}
old
old <- data.frame("-1" = numeric(),
"0" = numeric(),
"1" = numeric()
)
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq") %>% t()
print(d)
# old <- merge(old, d, by = "Var1")
}
old
View(d)
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t()
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame()
View(new)
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame() %>% rownames_to_column(Var1)
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame() %>% rownames_to_column("Var1")
View(new)
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame()
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame() %>% rownames_to_column(var "Var1")
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame() %>% rownames_to_column(var ="Var1")
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame() %>% rownames_to_column(var1 ="ne")
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame() %>% rowid_to_column(1)
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame() %>% rowid_to_column(., var = 1)
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% t() %>% as.data.frame() %>% rowid_to_column(., var = "1")
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
View(old)
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1") %>% column_to_rownames(Var1)
}
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1") %>% column_to_rownames("Var1")
}
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% %>% column_to_rownames("Var1")
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% column_to_rownames("Var1")
View(new)
old <- data.frame(Var1 = c(-1,0,1))
for (i in colnames(cnvs_arm)){
d <- as.data.frame(table(cnvs_arm[[i]])) %>% rename_with(~i, "Freq")
old <- merge(old, d, by = "Var1")
}
new <- old %>% column_to_rownames("Var1") %>% t()
knitr::opts_knit$set(root.dir = "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project")
library(dplyr)
library(rtracklayer)
library(tidyverse)
ori_segmnt_cnv <- read_tsv("Data/CIN_Features/CNV_Data/Chrom_seg_CNV.txt")
all_segs <- import("/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Raw_Data/Other/censat.bb") %>% as.data.frame()
# from the T2T data select the ranges for the annotations of satellites that correspond to pericentromeric sats
cgbh_segs <- all_segs %>%
filter((grepl("hsat", name)) |
(grepl("gsat", name)) |
(grepl("bsat", name)) |
(grepl("ct", name)) |
(grepl("censat", name))) %>%
select(c("seqnames","start", "end", "width", "name")) %>%
arrange(seqnames, start)
# Combine the adjacent ranges
comb_cgbh <- cgbh_segs %>%
group_by(seqnames) %>%
arrange(start) %>%
mutate(end_next = lead(start),
combined = ifelse(end == end_next & !is.na(end_next), TRUE, FALSE),
combined_group = 0) %>%
select(-"end_next") %>%
arrange(seqnames, start )
cgbh_subset <- comb_cgbh %>%
group_by(seqnames) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
ungroup()
for (i in 2:nrow(cgbh_subset)) {
cgbh_subset$combined_group[i] <- ifelse(
cgbh_subset$combined[i - 1],
cgbh_subset$combined_group[i - 1],
cgbh_subset$combined_group[i - 1] + 1
)
}
# Ensuring that the resulting combined regions start and end with HSat regions
adj_cgbh <- cgbh_subset %>%
group_by(seqnames, combined_group) %>%
mutate(first_hsat = cummax(grepl("hsat", name)),
last_hsat = rev(cummax(rev(grepl("hsat", name))))) %>%
filter((first_hsat == 1) & (last_hsat == 1)) %>%
select(-c("first_hsat","last_hsat")) %>%
summarise(start_bp = dplyr::first(start),
end_bp = last(end),
width_bp = sum(width),
name = paste(name, collapse = ", ")) %>%
select(-c("combined_group"))
final_cgbh <- adj_cgbh %>%
group_by(seqnames) %>%
filter((width_bp == max(width_bp)) | (width_bp >= 1000000)) %>%
mutate(
peri_id = case_when(
n() > 1 ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))), "_", row_number()),
TRUE ~ paste0("peri_", substring(as.character(seqnames), 4, nchar(as.character(seqnames))))),
seqnames = substring(as.character(seqnames), 4, nchar(as.character(seqnames)))
) %>%
rename(seqnames = "chromosome") %>%
select(peri_id,chromosome, everything())
print(final_cgbh)
# write.csv(final_cgbh,"/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/Other/pericentro_meta.csv", row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
.groups = 'drop'  # This option removes the grouping structure after summarisation
) %>%
select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
View(ori_segmnt_cnv)
View(all_segs)
View(all_segs)
View(adj_cgbh)
View(final_cgbh)
View(cnv_reformat)
View(cnv_reformat)
View(cnv_reformat)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
.groups = 'drop'  # This option removes the grouping structure after summarisation
) %>%
select(sampleID, peri_id, cnv, overlap_proportion)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
View(check_sub)
View(seg_sub)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
) %>%
group_by(peri_id, sampleID) %>%
summarise(
cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
.groups = 'drop'  # This option removes the grouping structure after summarisation
)
# %>%
#   select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
cnv_reformat[is.na(cnv_reformat)] <- 0
# write.csv(cnv_reformat, "/Users/Dyll/Documents/Education/VU_UVA/Internship/Epigenetics/Janssen_Group-UMCUtrecht/Main_Project/Data/CIN_Features/CNV_Data/TCGA_pericentro_cnv.csv", row.names = FALSE)
cnv_long <- data.frame()
for (chrm in unique(ori_segmnt_cnv$chr)){
if (!chrm %in% final_cgbh$chromosome){
next
} else {
check_sub <- final_cgbh %>%
filter(chromosome == chrm)
seg_sub <- ori_segmnt_cnv %>%
filter(chr == chrm) %>%
expand_grid(check_sub) %>%
filter(
(start >= start_bp & start < end_bp) |
(end > start_bp & end <= end_bp) |
(start <= start_bp & end >= end_bp)
) %>%
mutate(
overlap_start = pmax(start, start_bp),
overlap_end = pmin(end, end_bp),
overlap_length = overlap_end - overlap_start,
check_sub_length = end_bp - start_bp,
overlap_proportion = overlap_length / check_sub_length
)
# %>%
#   group_by(peri_id, sampleID) %>%
#   summarise(
#     cnv = round(sum(value * overlap_proportion) / sum(overlap_proportion),4),
#     .groups = 'drop'  # This option removes the grouping structure after summarisation
#   )
# %>%
#   select(sampleID, peri_id, cnv)
}
cnv_long <- rbind(cnv_long, seg_sub)
}
cnv_reformat <- pivot_wider(cnv_long, names_from = peri_id, values_from = cnv)
View(cnv_long)
